{"version":3,"sources":["actions/Actions/index.js","constants/MachineConstants.js","pages/Experiment/Task/TaskLogging.js","pages/Experiment/Task/TaskExecuting.js","pages/Experiment/Task/TaskMonitoring.js","pages/Experiment/Task/index.js","pages/Sider/index.module.scss","constants/Errors.js","pages/Machine/libs/request.js","constants/ExperimentConstants.js","pages/Experiment/Task/TaskInfo.js","pages/Component/HeaderBar/HeaderBar.module.scss","pages/Scenario/Category/CategoryList.js","pages/Scenario/Category/index.js","actions/Types/index.js","reportWebVitals.js","PathRouter.js","pages/Component/Metadata/navigation.js","pages/Component/HeaderBar/index.js","pages/Machine/libs/pageable.js","reducers/createReducer.js","reducers/Machine.js","reducers/Scenario.js","reducers/ScenarioDetail.js","reducers/Category.js","reducers/Experiment.js","reducers/ExperimentCreating.js","reducers/ExperimentDetail.js","reducers/ExperimentTaskDetail.js","reducers/Probe.js","reducers/Register.js","reducers/ChaostoolsDeploy.js","reducers/ChaostoolsDetail.js","reducers/Chaostools.js","reducers/Error.js","reducers/index.js","constants/NetworkConstants.js","services/api.config.js","services/convertApi.js","services/createApi.js","services/ApplicationApi.js","sagas/response.js","sagas/Application.js","services/ScenarioApi.js","sagas/Scenario.js","services/HostApi.js","sagas/Host.js","services/KubernetesApi.js","sagas/Kubernetes.js","services/ExperimentApi.js","sagas/Experiment.js","services/ProbeApi.js","sagas/Probe.js","services/ChaostoolsApi.js","sagas/Chaostools.js","sagas/index.js","stores/configureStore.js","stores/getPersistConfig.js","locales/index.js","locales/en.js","locales/zh.js","libs/Request/HistoryContext.js","pages/Error/index.js","pages/Sider/index.js","Console.js","index.js","pages/Experiment/Task/index.module.scss"],"names":["Actions","getApplicationTotalStatistics","active","type","Types","GET_APPLICATION_TOTAL_STATISTICS","getApplicationTotalStatisticsResult","statistics","GET_APPLICATION_TOTAL_STATISTICS_RESULT","getMachinesForApplicationPageable","query","GET_MACHINES_FOR_APPLICATION_PAGEABLE","getMachinesForApplicationPageableResult","pageableData","GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT","getMachinesForHostPageable","GET_MACHINES_FOR_HOST_PAGEABLE","getMachinesForHostPageableResult","GET_MACHINES_FOR_HOST_PAGEABLE_RESULT","getK8sResourceStatistics","GET_K8S_RESOURCE_STATISTICS","getK8sResourceStatisticsResult","GET_K8S_RESOURCE_STATISTICS_RESULT","getMachinesForPodPageable","GET_MACHINES_FOR_POD_PAGEABLE","getMachinesForPodPageableResult","GET_MACHINES_FOR_POD_PAGEABLE_RESULT","getMachinesForNodePageable","GET_MACHINES_FOR_NODE_PAGEABLE","getMachinesForNodePageableResult","GET_MACHINES_FOR_NODE_PAGEABLE_RESULT","banMachine","machineId","BAN_MACHINE","banMachineResult","data","BAN_MACHINE_RESULT","unbanMachine","UNBAN_MACHINE","unbanMachineResult","UNBAN_MACHINE_RESULT","getHostTotalStatistics","GET_HOST_TOTAL_STATISTICS","getHostTotalStatisticsResult","GET_HOST_TOTAL_STATISTICS_RESULT","queryCollectStatus","QUERY_COLLECT_STATUS","queryCollectStatusResult","QUERY_COLLECT_STATUS_RESULT","getScenarioById","scenarioId","GET_SCENARIO_BY_ID","getScenarioByIdResult","GET_SCENARIO_BY_ID_RESULT","getScenariosStatistics","GET_SCENARIOS_STATISTICS","getScenariosStatisticsResult","GET_SCENARIOS_STATISTICS_RESULT","getScenariosPageable","GET_SCENARIOS_PAGEABLE","getScenariosPageableResult","GET_SCENARIOS_PAGEABLE_RESULT","updateScenario","scenario","UPDATE_SCENARIO","updateScenarioResult","UPDATE_SCENARIO_RESULT","banScenario","BAN_SCENARIO","banScenarioResult","BAN_SCENARIO_RESULT","unbanScenario","UNBAN_SCENARIO","unbanScenarioResult","UNBAN_SCENARIO_RESULT","importScenarios","scenarios","file","IMPORT_SCENARIOS","importScenariosResult","IMPORT_SCENARIOS_RESULT","getScenarioCategories","GET_SCENARIO_CATEGORIES","getScenarioCategoriesResult","GET_SCENARIO_CATEGORIES_RESULT","getAnsibleHosts","GET_ANSIBLE_HOSTS","getAnsibleHostsResult","GET_ANSIBLE_HOSTS_RESULT","getAnsibleHostsRegister","hosts","GET_ANSIBLE_HOSTS_REGISTER","getAnsibleHostsRegisterResult","GET_ANSIBLE_HOSTS_REGISTER_RESULT","installProbeByAnsible","values","INSTALL_PROBE_BY_ANSIBLE","installProbeByAnsibleResult","INSTALL_PROBE_BY_ANSIBLE_RESULT","clearAnsibleRegisterResult","CLEAR_ANSIBLE_REGISTER_RESULT","getProbesPageable","GET_PROBES_PAGEABLE","getProbesPageableResult","GET_PROBES_PAGEABLE_RESULT","banProbe","probeId","BAN_PROBE","banProbeResult","BAN_PROBE_RESULT","unbanProbe","UNBAN_PROBE","unbanProbeResult","UNBAN_PROBE_RESULT","uninstallProbe","UNINSTALL_PROBE","uninstallProbeResult","UNINSTALL_PROBE_RESULT","queryProbesInstallation","probeIds","QUERY_PROBES_INSTALLATION","queryProbesInstallationResult","QUERY_PROBES_INSTALLATION_RESULT","getExperimentStatistics","GET_EXPERIMENT_STATISTICS","getExperimentStatisticsResult","GET_EXPERIMENT_STATISTICS_RESULT","getExperimentsPageable","GET_EXPERIMENTS_PAGEABLE","getExperimentsPageableResult","GET_EXPERIMENTS_PAGEABLE_RESULT","getKubernetesNamespaces","GET_KUBERNETES_NAMESPACES","getKubernetesNamespacesResult","GET_KUBERNETES_NAMESPACES_RESULT","createExperiment","experiment","CREATE_EXPERIMENT","createExperimentResult","CREATE_EXPERIMENT_RESULT","updateExperiment","UPDATE_EXPERIMENT","updateExperimentResult","UPDATE_EXPERIMENT_RESULT","startExperiment","experimentId","START_EXPERIMENT","startExperimentResult","START_EXPERIMENT_RESULT","getExperimentById","GET_EXPERIMENT_BY_ID","getExperimentByIdResult","GET_EXPERIMENT_BY_ID_RESULT","getTaskByExperimentId","GET_TASKS_BY_EXPERIMENT_ID","getTaskByExperimentIdResult","GET_TASKS_BY_EXPERIMENT_ID_RESULT","queryTaskResult","taskId","QUERY_TASK_RESULT","queryTaskResultResult","QUERY_TASK_RESULT_RESULT","clearExperimentDetailResult","CLEAR_EXPERIMENT_DETAIL_RESULT","endExperiment","END_EXPERIMENT","endExperimentResult","END_EXPERIMENT_RESULT","retryExperiment","task","FAIL_RETRY_EXPERIMENT","retryExperimentResult","FAIL_RETRY_EXPERIMENT_RESULT","queryTaskLog","QUERY_TASK_LOG","queryTaskLogResult","QUERY_TASK_LOG_RESULT","creatingFromMachine","CREATING_FROM_MACHINE_RESULT","creatingFromScenario","CREATING_FROM_SCENARIO_RESULT","queryTaskMonitor","QUERY_TASK_MONITOR","queryTaskMonitorResult","QUERY_TASK_MONITOR_RESULT","queryMetricCategory","QUERY_METRIC_CATEGORY","queryMetricCategoryResult","QUERY_METRIC_CATEGORY_RESULT","onScenarioCategoryChanged","ON_SCENARIO_CATEGORY_CHANGED","onScenarioChanged","ON_SCENARIO_CHANGED","onExperimentNameChanged","ON_EXPERIMENT_NAME_CHANGED","onMetricChanged","ON_METRIC_CHANGED","onMachinesChanged","ON_MACHINES_CHANGED","onDimensionChanged","ON_DIMENSION_CHANGED","getClusterInfo","GET_CLUSTER_INFO","getClusterInfoResult","GET_CLUSTER_INFO_RESULT","getChaostoolsDeployedStatistics","name","GET_CHAOSTOOLS_DEPLOYED_STATISTICS","getChaostoolsDeployedStatisticsResult","date","GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT","deployChaostoolsToHost","tools","DEPLOY_CHAOSTOOLS_TO_HOST","deployChaostoolsToHostResult","DEPLOY_CHAOSTOOLS_TO_HOST_RESULT","undeployChaostoolsForHost","UNDEPLOY_CHAOSTOOLS_FOR_HOST","undeployChaostoolsForHostResult","UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT","upgradeChaostoolsToHost","UPGRADE_CHAOSTOOLS_TO_HOST","upgradeChaostoolsToHostResult","UPGRADE_CHAOSTOOLS_TO_HOST_RESULT","fetchChaostoolsScenarios","version","FETCH_CHAOSTOOLS_SCENARIOS","fetchChaostoolsScenariosResult","FETCH_CHAOSTOOLS_SCENARIOS_RESULT","fetchPublicChaostools","callback","FETCH_PUBLIC_CHAOSTOOLS","fetchPublicChaostoolsResult","FETCH_PUBLIC_CHAOSTOOLS_RESULT","fetchChaostoolsOverview","FETCH_CHAOSTOOLS_OVERVIEW","fetchChaostoolsOverviewResult","FETCH_CHAOSTOOLS_OVERVIEW_RESULT","fetchChaostoolsVersionInfo","FETCH_CHAOSTOOLS_VERSION_INFO","fetchChaostoolsVersionInfoResult","FETCH_CHAOSTOOLS_VERSION_INFO_RESULT","handleError","code","message","HANDLE_ERROR","clearError","handleCriticalError","error","HANDLE_CRITICAL_ERROR","clearCriticalError","CLEAR_CRITICAL_ERROR","loading","text","LOADING","loaded","LOADED","clearExperimentCreatingResult","CLEAR_EXPERIMENT_CREATING_RESULT","MachineConstants","MACHINE_STATUS_WAIT","desc","MACHINE_STATUS_INSTALLING","MACHINE_STATUS_INSTALL_FAILED","MACHINE_STATUS_ONLINE","MACHINE_STATUS_OFFLINE","MACHINE_STATUS_UNINSTALLING","MACHINE_STATUS_UNINSTALL_FAILED","MACHINE_STATUS_BANING","MACHINE_STATUS","MACHINE_TYPE_HOST","MACHINE_TYPE_NODE","MACHINE_TYPE_POD","TaskLogging","props","this","Task","getTaskId","logTime","setInterval","clearInterval","logging","ansi_up","AnsiUp","logs","map","log","push","Item","dangerouslySetInnerHTML","__html","ansi_to_html","pending","resultStatus","reverse","logRender","React","Component","connect","state","taskDetail","toJS","status","dispatch","TaskExecuting","Operations","RETRY","onClick","bind","END","END_DANGER","statusRender","getTaskStatus","ExperimentConstants","TASK_WAIT","className","styles","executeStatus","title","SyncOutlined","spin","TASK_START_RUNNING","extra","TASK_START_SUCCESS","TASK_START_FAILED","TASK_END_RUNNING","TASK_END_SUCCESS","executeTime","TASK_END_FAILED","executeLoading","spinning","phase","startTime","endTime","machines","chartOptions","padding","xField","yField","seriesField","yAxis","label","formatter","v","Number","annotations","top","start","end","color","position","content","offsetY","style","textBaseline","stroke","lineDash","TaskMonitoring","updateChart","metrics","_","isEmpty","chart","Line","render","update","metricTime","taskMetricsRender","id","detail","monitor","machineStatusRender","hostContainer","history","gutter","wrap","flex","bordered","taskCard","TaskInfo","queryString","parse","window","location","search","TASK_STATUS_READY","TASK_STATUS_RUNNING","TASK_RESULT_STATUS_SUCCESS","TASK_RESULT_STATUS_FAILED","TASK_STATUS_STOPPING","TASK_STATUS_END","TASK_UNKNOWN","taskStatus","TASK_STATUS","module","exports","Errors","UNKNOWN_ERROR","TIMEOUT_ERROR","PARAMETER_ERROR","generateUrlSearch","params","parsed","TASK_STATUS_STOPPED","TASK_RESULT_STATUS_NULL","result","MACHINE_STATUS_RUNNING","MACHINE_STATUS_SUCCESS","MACHINE_STATUS_FAILED","0","1","2","3","4","5","duration","days","hours","minutes","seconds","infoTime","getDuration","setState","moment","Date","diff","floor","as","taskName","column","renderDuration","request","_status","statusTag","TreeNode","CategoryList","editing","item","dataRef","children","treeNode","categoryId","categories","defaultExpandAll","showLine","category","Category","CLEAR_ERROR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Overview","lazy","Machine","MachineRegister","ProbeManager","Scenario","ScenarioDetail","Experiment","ExperimentCreating","ExperimentDetail","ChaostoolsMarket","ChaostoolsDetail","ChaostoolsDeployed","PathRouter","fallback","exact","path","component","NavigationConfig","key","icon","ProjectOutlined","subs","DesktopOutlined","FileOutlined","NavigationMap","reduce","obj","length","sub","HeaderBar","withRouter","pathSnippets","pathname","split","filter","i","extraBreadcrumbItems","index","url","slice","join","to","breadcrumbItems","concat","Breadcrumb","handleMachinesFetchingResult","action","merge","pageSize","page","total","pages","original","s","orderBy","applications","pods","nodes","initialState","handlers","isNil","Error","isObject","wrappedHandlers","catchErrorHandler","hasOwnProperty","handler","err","wrapHandlers","has","INITIAL_STATE","Map","hostStatistics","totals","onlines","applicationStatistics","apps","groups","clusterStatistics","namespaces","banAndUnbanMachine","current","updateFunc","machine","ACTION_HANDLERS","createReducer","basics","containers","newScenarios","parseFunc","child","categoryName","_scenarios","description","supportScopeTypes","categoryIds","createTime","modifyTime","parameters","running","finished","success","failed","prepares","refreshing","experiments","refresh","_experiments","MAX_PAGE_SIZE","experimentName","collect","dimension","scenarioSelected","machinesSelected","metricSelected","metricCategories","scenarioCategoryIdSelected","items","ip","hostname","disabled","machineIp","metric","podName","container","containerName","nodeName","taskCount","lastTaskCreateTime","lastTaskStatus","lastTaskResult","tasks","execute","loggingLoading","metricTask","value","toFixed","_metrics","updateProbe","newProbes","probes","_probes","ansibleHostsLoading","ansibleHosts","ansibleInstallationsLoading","ansibleInstallations","probesInstallationsLoading","probesInstallations","probe","host","subTitle","webSite","logo","latest","copyright","readme","versionInfo","releaseUrl","downloadUrl","changelog","scenarioFiles","scenariosLoading","scenarioList","actions","target","longDesc","scenarioCount","importScenarioCount","chaostools","publics","requestId","criticalError","combineReducers","register","scenarioDetail","experimentCreating","experimentDetail","chaostoolsDeploy","chaostoolsDetail","NetworkConstants","TIMEOUT_INTERVAL","ApiConfig","baseURL","timeout","headers","console","convertApi","api","axiosInstance","config","getBaseURL","isAtkReq","indexOf","Promise","resolve","reject","response","catch","apiCache","createApi","apisauce","create","addRequestTransform","parsedSearchParams","parseNumbers","test","addResponseTransform","ok","responseData","problem","wrapper","get","post","getError","defaultError","watchApplicationTotalStatisticFetching","watchMachinesForApplicationFetching","take","fork","race","call","ApplicationApi","delay","put","all","watchGetScenarioById","watchScenarioStatisticsFetching","getScenarioStatistics","watchScenariosFetching","watchScenarioCategoriesFetching","watchBanScenario","watchUnbanScenario","watchUpdateScenario","ScenarioApi","watchGetHostTotalStatistics","watchMachinesForHostFetching","watchBanMachine","watchUnbanMachine","watchAnsibleHostsFetching","watchAnsibleHostsRegisterFetching","watchGetProbesFetching","HostApi","watchGetK8sResourceStatistics","watchGetMachinesForPod","watchGetMachinesForNode","watchQueryCollectStatus","KubernetesApi","watchExperimentStatisticFetching","watchExperimentsFetching","watchCreateExperiment","watchUpdateExperiment","watchGetExperimentById","watchGetTasksByExperimentId","getTasksByExperimentId","watchQueryTaskResult","watchStartExperiment","watchEndExperiment","watchRetryExperiment","watchQueryTaskLogging","queryTaskLogging","watchQueryTaskMonitor","watchQueryMetricCategory","ExperimentApi","watchBanProbe","watchUnbanProbe","watchInstallProbeByAnsible","watchQueryProbesInstallation","watchUninstallProbe","ProbeApi","watchFetchPublicChaostools","watchFetchChaostoolsOverview","watchFetchChaostoolsVersionInfo","watchFetchChaostoolsScenarios","watchImportScenarios","watchDeployChaostoolsToHost","ChaostoolsApi","yaml","load","json","putResolve","root","application","kubernetes","persistConfig","transforms","immutableTransform","whitelist","storage","localForage","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","require","composeWithDevTools","trace","devtools","store","createStore","persistReducer","reducers","run","sagas","persistor","persistStore","Messages","en","zh","HistoryContext","createContext","errorInfo","handlerCriticalError","stack","isDebug","onclose","href","isUndefined","debug","isNull","nextProps","errorCode","errorMessage","SubMenu","Sider","ConsoleSider","onCollapse","collapsed","locale","changeLocale","collapsible","Group","onChange","defaultValue","size","Button","theme","defaultSelectedKeys","selectedKeys","mode","defaultOpenKeys","nav","Content","Header","Footer","Console","e","createBrowserHistory","configureStore","Provider","minHeight","messages","margin","textAlign","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.501590c0.chunk.js","sourcesContent":["/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Types from \"../Types\";\n\nconst Actions = {\n    // Application\n    getApplicationTotalStatistics: active => ({type: Types.GET_APPLICATION_TOTAL_STATISTICS}),\n    getApplicationTotalStatisticsResult: statistics => ({\n        type: Types.GET_APPLICATION_TOTAL_STATISTICS_RESULT, statistics\n    }),\n    getMachinesForApplicationPageable: query => ({type: Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE, query}),\n    getMachinesForApplicationPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT,\n        pageableData\n    }),\n    getMachinesForHostPageable: query => ({type: Types.GET_MACHINES_FOR_HOST_PAGEABLE, query}),\n    getMachinesForHostPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT,\n        pageableData\n    }),\n    getK8sResourceStatistics: () => ({type: Types.GET_K8S_RESOURCE_STATISTICS}),\n    getK8sResourceStatisticsResult: statistics => ({\n        type: Types.GET_K8S_RESOURCE_STATISTICS_RESULT, statistics\n    }),\n    getMachinesForPodPageable: query => ({type: Types.GET_MACHINES_FOR_POD_PAGEABLE, query}),\n    getMachinesForPodPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT, pageableData\n    }),\n    getMachinesForNodePageable: query => ({type: Types.GET_MACHINES_FOR_NODE_PAGEABLE, query}),\n    getMachinesForNodePageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT, pageableData\n    }),\n    banMachine: machineId => ({type: Types.BAN_MACHINE, machineId}),\n    banMachineResult: data => ({type: Types.BAN_MACHINE_RESULT, data}),\n    unbanMachine: machineId => ({type: Types.UNBAN_MACHINE, machineId}),\n    unbanMachineResult: data => ({type: Types.UNBAN_MACHINE_RESULT, data}),\n    getHostTotalStatistics: () => ({type: Types.GET_HOST_TOTAL_STATISTICS}),\n    getHostTotalStatisticsResult: statistics => ({type: Types.GET_HOST_TOTAL_STATISTICS_RESULT, statistics}),\n    queryCollectStatus: () => ({type: Types.QUERY_COLLECT_STATUS}),\n    queryCollectStatusResult: data => ({type: Types.QUERY_COLLECT_STATUS_RESULT, data}),\n\n\n    // Scenario\n    getScenarioById: scenarioId => ({type: Types.GET_SCENARIO_BY_ID, scenarioId}),\n    getScenarioByIdResult: data => ({type: Types.GET_SCENARIO_BY_ID_RESULT, data}),\n    getScenariosStatistics: () => ({type: Types.GET_SCENARIOS_STATISTICS}),\n    getScenariosStatisticsResult: statistics => ({type: Types.GET_SCENARIOS_STATISTICS_RESULT, statistics}),\n    getScenariosPageable: query => ({type: Types.GET_SCENARIOS_PAGEABLE, query}),\n    getScenariosPageableResult: pageableData => ({\n        type: Types.GET_SCENARIOS_PAGEABLE_RESULT, pageableData\n    }),\n    updateScenario: scenario => ({type: Types.UPDATE_SCENARIO, scenario}),\n    updateScenarioResult: data => ({type: Types.UPDATE_SCENARIO_RESULT, data}),\n    banScenario: scenarioId => ({type: Types.BAN_SCENARIO, scenarioId}),\n    banScenarioResult: data => ({type: Types.BAN_SCENARIO_RESULT, data}),\n    unbanScenario: scenarioId => ({type: Types.UNBAN_SCENARIO, scenarioId}),\n    unbanScenarioResult: data => ({type: Types.UNBAN_SCENARIO_RESULT, data}),\n    importScenarios: (scenarios, file) => ({type: Types.IMPORT_SCENARIOS, scenarios, file}),\n    importScenariosResult: scenarios => ({type: Types.IMPORT_SCENARIOS_RESULT, scenarios}),\n    getScenarioCategories: query => ({type: Types.GET_SCENARIO_CATEGORIES, query}),\n    getScenarioCategoriesResult: data => ({type: Types.GET_SCENARIO_CATEGORIES_RESULT, data}),\n\n    // Ansible\n    getAnsibleHosts: () => ({type: Types.GET_ANSIBLE_HOSTS}),\n    getAnsibleHostsResult: (data) => ({type: Types.GET_ANSIBLE_HOSTS_RESULT, data}),\n    getAnsibleHostsRegister: hosts => ({type: Types.GET_ANSIBLE_HOSTS_REGISTER}, hosts),\n    getAnsibleHostsRegisterResult: data => ({type: Types.GET_ANSIBLE_HOSTS_REGISTER_RESULT, data}),\n    installProbeByAnsible: values => ({type: Types.INSTALL_PROBE_BY_ANSIBLE, values}),\n    installProbeByAnsibleResult: data => ({type: Types.INSTALL_PROBE_BY_ANSIBLE_RESULT, data}),\n    clearAnsibleRegisterResult: () => ({type: Types.CLEAR_ANSIBLE_REGISTER_RESULT}),\n\n    // Probe\n    getProbesPageable: query => ({type: Types.GET_PROBES_PAGEABLE, query}),\n    getProbesPageableResult: pageableData => ({type: Types.GET_PROBES_PAGEABLE_RESULT, pageableData}),\n    banProbe: probeId => ({type: Types.BAN_PROBE, probeId}),\n    banProbeResult: data => ({type: Types.BAN_PROBE_RESULT, data}),\n    unbanProbe: probeId => ({type: Types.UNBAN_PROBE, probeId}),\n    unbanProbeResult: data => ({type: Types.UNBAN_PROBE_RESULT, data}),\n    uninstallProbe: probeId => ({type: Types.UNINSTALL_PROBE, probeId}),\n    uninstallProbeResult: data => ({type: Types.UNINSTALL_PROBE_RESULT, data}),\n    queryProbesInstallation: probeIds => ({type: Types.QUERY_PROBES_INSTALLATION, probeIds}),\n    queryProbesInstallationResult: data => ({type: Types.QUERY_PROBES_INSTALLATION_RESULT, data}),\n\n    // Experiment\n    getExperimentStatistics: () => ({type: Types.GET_EXPERIMENT_STATISTICS}),\n    getExperimentStatisticsResult: statistics => ({type: Types.GET_EXPERIMENT_STATISTICS_RESULT, statistics}),\n    getExperimentsPageable: query => ({type: Types.GET_EXPERIMENTS_PAGEABLE, query}),\n    getExperimentsPageableResult: pageableData => ({type: Types.GET_EXPERIMENTS_PAGEABLE_RESULT, pageableData}),\n    getKubernetesNamespaces: () => ({type: Types.GET_KUBERNETES_NAMESPACES}),\n    getKubernetesNamespacesResult: () => ({type: Types.GET_KUBERNETES_NAMESPACES_RESULT}),\n    createExperiment: experiment => ({type: Types.CREATE_EXPERIMENT, experiment}),\n    createExperimentResult: data => ({type: Types.CREATE_EXPERIMENT_RESULT, data}),\n    updateExperiment: experiment => ({type: Types.UPDATE_EXPERIMENT, experiment}),\n    updateExperimentResult: data => ({type: Types.UPDATE_EXPERIMENT_RESULT, data}),\n    startExperiment: experimentId => ({type: Types.START_EXPERIMENT, experimentId}),\n    startExperimentResult: data => ({type: Types.START_EXPERIMENT_RESULT, data}),\n    getExperimentById: experimentId => ({type: Types.GET_EXPERIMENT_BY_ID, experimentId}),\n    getExperimentByIdResult: data => ({type: Types.GET_EXPERIMENT_BY_ID_RESULT, data}),\n    getTaskByExperimentId: experimentId => ({type: Types.GET_TASKS_BY_EXPERIMENT_ID, experimentId}),\n    getTaskByExperimentIdResult: data => ({type: Types.GET_TASKS_BY_EXPERIMENT_ID_RESULT, data}),\n    queryTaskResult: taskId => ({type: Types.QUERY_TASK_RESULT, taskId}),\n    queryTaskResultResult: data => ({type: Types.QUERY_TASK_RESULT_RESULT, data}),\n    clearExperimentDetailResult: () => ({type: Types.CLEAR_EXPERIMENT_DETAIL_RESULT}),\n    endExperiment: taskId => ({type: Types.END_EXPERIMENT, taskId}),\n    endExperimentResult: data => ({type: Types.END_EXPERIMENT_RESULT, data}),\n    retryExperiment: task => ({type: Types.FAIL_RETRY_EXPERIMENT, task}),\n    retryExperimentResult: data => ({type: Types.FAIL_RETRY_EXPERIMENT_RESULT, data}),\n    queryTaskLog: taskId => ({type: Types.QUERY_TASK_LOG, taskId}),\n    queryTaskLogResult: data => ({type: Types.QUERY_TASK_LOG_RESULT, data}),\n    creatingFromMachine: data => ({type: Types.CREATING_FROM_MACHINE_RESULT, data}),\n    creatingFromScenario: data => ({type: Types.CREATING_FROM_SCENARIO_RESULT, data}),\n    queryTaskMonitor: query => ({type: Types.QUERY_TASK_MONITOR, query}),\n    queryTaskMonitorResult: data => ({type: Types.QUERY_TASK_MONITOR_RESULT, data}),\n    queryMetricCategory: query => ({type: Types.QUERY_METRIC_CATEGORY, query}),\n    queryMetricCategoryResult: data => ({type: Types.QUERY_METRIC_CATEGORY_RESULT, data}),\n    onScenarioCategoryChanged: data => ({type: Types.ON_SCENARIO_CATEGORY_CHANGED, data}),\n    onScenarioChanged: data => ({type: Types.ON_SCENARIO_CHANGED, data}),\n    onExperimentNameChanged: data => ({type: Types.ON_EXPERIMENT_NAME_CHANGED, data}),\n    onMetricChanged: data => ({type: Types.ON_METRIC_CHANGED, data}),\n    onMachinesChanged: data => ({type: Types.ON_MACHINES_CHANGED, data}),\n    onDimensionChanged: data => ({type: Types.ON_DIMENSION_CHANGED, data}),\n\n\n    // Cluster\n    getClusterInfo: () => ({type: Types.GET_CLUSTER_INFO}),\n    getClusterInfoResult: () => ({type: Types.GET_CLUSTER_INFO_RESULT}),\n\n    // Chaostools\n    getChaostoolsDeployedStatistics: name => ({type: Types.GET_CHAOSTOOLS_DEPLOYED_STATISTICS, name}),\n    getChaostoolsDeployedStatisticsResult: date => ({type: Types.GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT, date}),\n    deployChaostoolsToHost: tools => ({type: Types.DEPLOY_CHAOSTOOLS_TO_HOST, tools}),\n    deployChaostoolsToHostResult: data => ({type: Types.DEPLOY_CHAOSTOOLS_TO_HOST_RESULT, data}),\n    undeployChaostoolsForHost: tools => ({type: Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST, tools}),\n    undeployChaostoolsForHostResult: data => ({type: Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT, data}),\n    upgradeChaostoolsToHost: tools => ({type: Types.UPGRADE_CHAOSTOOLS_TO_HOST, tools}),\n    upgradeChaostoolsToHostResult: data => ({type: Types.UPGRADE_CHAOSTOOLS_TO_HOST_RESULT, data}),\n    fetchChaostoolsScenarios: (name, version, file) => ({type: Types.FETCH_CHAOSTOOLS_SCENARIOS, name, version, file}),\n    fetchChaostoolsScenariosResult: data => ({type: Types.FETCH_CHAOSTOOLS_SCENARIOS_RESULT, data}),\n    fetchPublicChaostools: callback => ({type: Types.FETCH_PUBLIC_CHAOSTOOLS, callback}),\n    fetchPublicChaostoolsResult: data => ({type: Types.FETCH_PUBLIC_CHAOSTOOLS_RESULT, data}),\n    fetchChaostoolsOverview: name => ({type: Types.FETCH_CHAOSTOOLS_OVERVIEW, name}),\n    fetchChaostoolsOverviewResult: data => ({type: Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT, data}),\n    fetchChaostoolsVersionInfo: (name, version) => ({type: Types.FETCH_CHAOSTOOLS_VERSION_INFO, name, version}),\n    fetchChaostoolsVersionInfoResult: data => ({type: Types.FETCH_CHAOSTOOLS_VERSION_INFO_RESULT, data}),\n\n    handleError: (code, message) => ({type: Types.HANDLE_ERROR, code, message}),\n    clearError: () => ({type: Types.HANDLE_ERROR}),\n    handleCriticalError: error => ({type: Types.HANDLE_CRITICAL_ERROR, error}),\n    clearCriticalError: () => ({type: Types.CLEAR_CRITICAL_ERROR}),\n    loading: text => ({type: Types.LOADING, text}),\n    loaded: () => ({type: Types.LOADED}),\n    clearExperimentCreatingResult: () => ({type: Types.CLEAR_EXPERIMENT_CREATING_RESULT})\n};\nexport default Actions;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst MachineConstants = {\n\n    MACHINE_STATUS_WAIT: {\n        code: 0,\n        desc: \"page.machine.status.wait\",\n    },\n    MACHINE_STATUS_INSTALLING: {\n        code: 1,\n        desc: \"page.machine.status.installing\",\n    },\n    MACHINE_STATUS_INSTALL_FAILED: {\n        code: -1,\n        desc: \"page.machine.status.install.failed\",\n    },\n    MACHINE_STATUS_ONLINE: {\n        code: 2,\n        desc: \"page.machine.status.online\",\n    },\n    MACHINE_STATUS_OFFLINE: {\n        code: 3,\n        desc: \"page.machine.status.offline\",\n    },\n    MACHINE_STATUS_UNINSTALLING: {\n        code: 4,\n        desc: \"page.machine.status.uninstalling\",\n    },\n    MACHINE_STATUS_UNINSTALL_FAILED: {\n        code: 5,\n        desc: \"page.machine.status.uninstall.failed\",\n    },\n    MACHINE_STATUS_BANING: {\n        code: 9,\n        desc: 'page.machine.status.baning',\n    },\n\n    MACHINE_STATUS: {\n        \"0\": \"page.machine.status.wait\",\n        \"1\": \"page.machine.status.installing\",\n        \"-1\": \"page.machine.status.install.failed\",\n        \"2\": \"page.machine.status.online\",\n        \"3\": \"page.machine.status.offline\",\n        \"4\": \"page.machine.status.uninstalling\",\n        \"5\": \"page.machine.status.uninstall.failed\",\n\n        \"9\": 'page.machine.status.baning',\n    },\n\n    MACHINE_TYPE_HOST: {\n        code: 0,\n        desc: \"host\"\n    },\n    MACHINE_TYPE_NODE: {\n        code: 1,\n        desc: \"node\",\n    },\n    MACHINE_TYPE_POD: {\n        code: 2,\n        desc: \"pod\",\n    },\n\n}\n\nexport default MachineConstants;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Timeline} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport Task from \"./index\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport {default as AnsiUp} from 'ansi_up';\n\nclass TaskLogging extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {queryTaskLog} = this.props;\n        const taskId = Task.getTaskId();\n        queryTaskLog(taskId);\n        this.logTime = setInterval(() => {\n            queryTaskLog(taskId);\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.logTime);\n    }\n\n    logRender() {\n        const {logging} = this.props;\n        const ansi_up = new AnsiUp();\n        let logs = [];\n        logging.map(log => {\n            logs.push(\n                <Timeline.Item>\n                    <div dangerouslySetInnerHTML={{__html: ansi_up.ansi_to_html(log)}}/>\n                </Timeline.Item>\n            )\n        });\n        return logs;\n    }\n\n    render() {\n        const {resultStatus} = this.props;\n        const pending = resultStatus === null ? '执行中' : null;\n        return (\n            <div>\n                <Timeline pending={pending} reverse>\n                    {this.logRender()}\n                </Timeline>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        status: task.status,\n        resultStatus: task.resultStatus,\n        logging: task.logging,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskLog: (taskId) => dispatch(Actions.queryTaskLog(taskId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskLogging);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Button, Result, Space, Spin} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {SyncOutlined} from \"@ant-design/icons\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport Task from \"./index\";\nimport styles from './index.module.scss';\nimport {connect} from \"react-redux\";\n\nclass TaskExecuting extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {queryTaskResult} = this.props;\n        const taskId = Task.getTaskId();\n        this.executeTime = setInterval(() => {\n            queryTaskResult(taskId)\n        }, 3000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.executeTime);\n    }\n\n    endExperiment = () => {\n        const {endExperiment} = this.props;\n        const taskId = Task.getTaskId();\n        endExperiment(taskId);\n    }\n\n    retryExperiment = () => {\n        const {retryExperiment, status, resultStatus} = this.props;\n        const taskId = Task.getTaskId();\n        retryExperiment({taskId, status, resultStatus});\n    }\n\n    Operations = {\n        RETRY: <Button onClick={this.retryExperiment.bind(this)} key=\"retry\">重试</Button>,\n        END: <Button onClick={this.endExperiment.bind(this)} key=\"end\" type={\"primary\"}>终止</Button>,\n        END_DANGER: <Button onClick={this.endExperiment.bind(this)} key=\"end\" type={\"danger\"}>终止</Button>\n    }\n\n    statusRender = () => {\n        const {status, resultStatus} = this.props;\n        let taskStatus = Task.getTaskStatus(status, resultStatus);\n        switch (taskStatus) {\n            case ExperimentConstants.TASK_WAIT:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"warning\"\n                        title={<>实验准备中&nbsp;<SyncOutlined spin/></>}\n                    />\n                );\n            case ExperimentConstants.TASK_START_RUNNING:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"info\"\n                        title={<>实验执行中&nbsp;<SyncOutlined spin/></>}\n                        extra={\n                            <Space>\n                                {this.Operations.END_DANGER}\n                            </Space>\n                        }\n                    />\n                );\n            case ExperimentConstants.TASK_START_SUCCESS:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"success\"\n                        title=\"实验执行成功\"\n                        extra={\n                            <Space>\n                                {this.Operations.END}\n                            </Space>\n                        }\n                    />\n                );\n            case ExperimentConstants.TASK_START_FAILED:\n                return <Result\n                    className={styles.executeStatus}\n                    status=\"error\"\n                    title='实验执行失败'\n                    extra={\n                        <Space>\n                            {this.Operations.RETRY}\n                            {this.Operations.END}\n                        </Space>\n                    }\n                />\n            case ExperimentConstants.TASK_END_RUNNING:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"info\"\n                        title={<>实验终止中&nbsp;<SyncOutlined spin/></>}\n                    />\n                );\n            case ExperimentConstants.TASK_END_SUCCESS:\n                if (this.executeTime >= 0) {\n                    clearInterval(this.executeTime);\n                }\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"success\"\n                        title='实验已结束'\n                    />);\n            case ExperimentConstants.TASK_END_FAILED:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"error\"\n                        title='实验终止失败'\n                        extra={\n                            <Space>\n                                {this.Operations.RETRY}\n                            </Space>\n                        }\n                    />\n                );\n            default:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"warning\"\n                        title={'未知状态： ' + status + \",\" + resultStatus}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const {executeLoading} = this.props\n        return (<Spin spinning={executeLoading}>{this.statusRender()}</Spin>);\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        phase: task.phase,\n        startTime: task.startTime,\n        endTime: task.endTime,\n        status: task.status,\n        resultStatus: task.resultStatus,\n        machines: [],\n        executeLoading: task.executeLoading,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskResult: taskId => dispatch(Actions.queryTaskResult(taskId)),\n        retryExperiment: task => dispatch(Actions.retryExperiment(task)),\n        endExperiment: taskId => dispatch(Actions.endExperiment(taskId)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskExecuting);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport Actions from \"../../../actions/Actions\";\nimport {Line} from '@antv/g2plot';\nimport Task from \"./index\";\nimport _ from 'lodash';\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\n\nconst chartOptions = {\n    data: [],\n    padding: 'auto',\n    xField: 'date',\n    yField: 'value',\n    seriesField: 'ip',\n    yAxis: {\n        label: {\n            formatter: (v) => Number(v),\n        },\n    },\n    annotations: [\n        {\n            top: true,\n            type: 'regionFilter',\n            start: ['min', 'median'],\n            end: ['max', '0'],\n            color: '#F4664A',\n        },\n        {\n            type: 'text',\n            position: ['min', 'median'],\n            content: '中位数',\n            offsetY: -4,\n            style: {\n                textBaseline: 'bottom',\n            },\n        },\n        {\n            type: 'line',\n            start: ['min', 'median'],\n            end: ['max', 'median'],\n            style: {\n                stroke: '#F4664A',\n                lineDash: [2, 2],\n            },\n        },\n    ],\n};\n\nclass TaskMonitoring extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    taskMetricsRender() {\n        const taskId = Task.getTaskId();\n        const {queryTaskMonitor} = this.props;\n        queryTaskMonitor({taskId});\n        this.updateChart();\n    }\n\n    updateChart() {\n        const {metrics, status, resultStatus} = this.props;\n        if (_.isEmpty(metrics)) {\n            return;\n        }\n        if (_.isEmpty(this.chart)) {\n            this.chart = new Line('monitor', chartOptions);\n            this.chart.render();\n        }\n        chartOptions.data = metrics;\n        this.chart.update(chartOptions);\n        const taskStatus = Task.getTaskStatus(status, resultStatus);\n        if (taskStatus === ExperimentConstants.TASK_END_SUCCESS) {\n            clearInterval(this.metricTime);\n        }\n    }\n\n    componentDidMount() {\n        this.metricTime = setInterval(() => {\n            this.taskMetricsRender();\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.metricTime);\n    }\n\n    render() {\n        const {metrics} = this.props;\n        return <div>\n            <div id={\"monitor\"}>{_.isEmpty(metrics) ? '暂无数据' : ''}</div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const detail = state.taskDetail.toJS();\n    const {monitor} = detail;\n    return {\n        name: monitor.name,\n        metrics: monitor.metrics,\n        status: detail.status,\n        resultStatus: detail.resultStatus,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskMonitor: (query) => dispatch(Actions.queryTaskMonitor(query)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskMonitoring);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Card, Col, Row} from \"antd\";\nimport TaskLogging from \"./TaskLogging\";\nimport styles from './index.module.scss';\nimport TaskExecuting from \"./TaskExecuting\";\nimport TaskInfo from \"./TaskInfo\";\nimport TaskMonitoring from \"./TaskMonitoring\";\nimport queryString from \"query-string\";\nimport {ExperimentConstants, TASK_STATUS} from \"../../../constants/ExperimentConstants\";\n\nclass Task extends React.Component {\n\n    static getTaskId() {\n        const parsed = queryString.parse(window.location.search);\n        const {id} = parsed;\n        return id;\n    }\n\n    static getTaskStatus(status, resultStatus) {\n        if (status == null || status === ExperimentConstants.TASK_STATUS_READY.code) {\n            return ExperimentConstants.TASK_WAIT;\n        }\n        if (status === ExperimentConstants.TASK_STATUS_RUNNING.code) {\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_SUCCESS.code) {\n                return ExperimentConstants.TASK_START_SUCCESS;\n            }\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_FAILED.code) {\n                return ExperimentConstants.TASK_START_FAILED;\n            }\n            return ExperimentConstants.TASK_START_RUNNING;\n\n        }\n        if (status === ExperimentConstants.TASK_STATUS_STOPPING.code) {\n            return ExperimentConstants.TASK_END_RUNNING;\n        }\n        if (status === ExperimentConstants.TASK_STATUS_END.code) {\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_SUCCESS.code) {\n                return ExperimentConstants.TASK_END_SUCCESS;\n            }\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_FAILED.code) {\n                return ExperimentConstants.TASK_END_FAILED;\n            }\n        }\n        return ExperimentConstants.TASK_UNKNOWN;\n    }\n\n    static parseTaskStatus(taskStatus) {\n        if (taskStatus === -1) {\n            return ExperimentConstants.TASK_WAIT;\n        }\n        return TASK_STATUS[taskStatus]\n    }\n\n\n    machineStatusRender = () => {\n        return (\n            <div className={styles.hostContainer}>\n            </div>\n        );\n    }\n\n    render() {\n        const {history} = this.props;\n        return (\n            <div>\n                <div>\n                    <Row gutter={[6, 6]} wrap={false}>\n                        <Col flex=\"25%\">\n                            <Card title=\"基础信息\" bordered={true} className={styles.taskCard}>\n                                <TaskInfo history={history}/>\n                            </Card>\n                        </Col>\n                        <Col flex={\"auto\"}>\n                            <Card title=\"监控\" bordered={true} className={styles.taskCard}>\n                                <TaskMonitoring/>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row gutter={[6, 6]}>\n                        <Col flex=\"50%\">\n                            <Card title=\"执行结果\" bordered={true} className={styles.taskCard}>\n                                <TaskExecuting/>\n                            </Card>\n                        </Col>\n                        <Col flex=\"50%\">\n                            <Card title=\"执行日志\" bordered={true} className={styles.taskCard}>\n                                <TaskLogging/>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Task;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Sider_logo__34hKF\",\"changeLocale\":\"Sider_changeLocale__2JNfV\"};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const Errors = {\n    UNKNOWN_ERROR: {code: 1001, message: '未知错误'},\n    TIMEOUT_ERROR: {code: 1004, message: '请求超时，请稍后重试！'},\n    PARAMETER_ERROR: {code: 1006, message: '参数配置错误！'},\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as queryString from \"query-string\";\n\nexport const generateUrlSearch = (params) => {\n    const parsed = queryString.parse(window.location.search);\n    const search = {\n        ...parsed,\n        ...params,\n    };\n    return queryString.stringify(search);\n}\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const ExperimentConstants = {\n    TASK_STATUS_READY: {\n        code: 0,\n        desc: '准备运行'\n    },\n    TASK_STATUS_RUNNING: {\n        code: 1,\n        desc: '运行中',\n    },\n    TASK_STATUS_STOPPED: {\n        code: 2,\n        desc: '暂停',\n    },\n    TASK_STATUS_STOPPING: {\n        code: 3,\n        desc: '停止当中',\n    },\n    TASK_STATUS_END: {\n        code: 4,\n        desc: '已经结束'\n    },\n\n    TASK_RESULT_STATUS_NULL: {\n        code: -1,\n        desc: '暂无结果'\n    },\n    TASK_RESULT_STATUS_SUCCESS: {\n        code: 0,\n        desc: '执行成功'\n    },\n    TASK_RESULT_STATUS_FAILED: {\n        code: 1,\n        desc: '执行失败'\n    },\n\n    TASK_WAIT: {\n        code: -1,\n        desc: '未执行',\n        status: null,\n        result: null,\n    },\n    TASK_START_RUNNING: {\n        code: 0,\n        desc: '启动中',\n        status: 1,\n        result: null,\n    },\n    TASK_START_SUCCESS: {\n        code: 1,\n        desc: '启动成功',\n        status: 1,\n        result: 0,\n    },\n    TASK_START_FAILED: {\n        code: 2,\n        desc: '启动失败',\n        status: 1,\n        result: 1,\n    },\n    TASK_END_RUNNING: {\n        code: 3,\n        desc: '终止中',\n        status: 3,\n    },\n    TASK_END_SUCCESS: {\n        code: 4,\n        desc: '终止成功',\n        status: 4,\n        result: 0,\n    },\n    TASK_END_FAILED: {\n        code: 5,\n        desc: '终止失败',\n        status: 4,\n        result: 1,\n    },\n    TASK_UNKNOWN: {\n        code: 6,\n        desc: 'unknown'\n    },\n\n    MACHINE_STATUS_WAIT: {\n        code: 0,\n        desc: '未执行',\n    },\n    MACHINE_STATUS_RUNNING: {\n        code: 1,\n        desc: '执行中',\n    },\n    MACHINE_STATUS_SUCCESS: {\n        code: 2,\n        desc: '执行成功',\n    },\n    MACHINE_STATUS_FAILED: {\n        code: 3,\n        desc: '执行失败',\n    }\n}\n\nexport const TASK_STATUS = {\n    \"-1\": ExperimentConstants.TASK_WAIT,\n    0: ExperimentConstants.TASK_START_RUNNING,\n    1: ExperimentConstants.TASK_START_SUCCESS,\n    2: ExperimentConstants.TASK_START_FAILED,\n    3: ExperimentConstants.TASK_END_RUNNING,\n    4: ExperimentConstants.TASK_END_SUCCESS,\n    5: ExperimentConstants.TASK_END_FAILED\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Badge, Descriptions, Tag} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash'\nimport Task from \"./index\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport * as moment from \"moment\";\nimport * as request from \"../../Machine/libs/request\";\n\nclass TaskInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: {\n                days: 0,\n                hours: 0,\n                minutes: 0,\n                seconds: 0\n            },\n        }\n    }\n\n    static statusRender = (status, resultStatus) => {\n        const _status = Task.getTaskStatus(status, resultStatus);\n        let statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_UNKNOWN.desc}</Tag>;\n        switch (_status) {\n            case ExperimentConstants.TASK_START_SUCCESS:\n                statusTag = <Tag color={\"green\"}>{ExperimentConstants.TASK_START_SUCCESS.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_END_SUCCESS:\n                statusTag = <Tag color={\"green\"}>{ExperimentConstants.TASK_END_SUCCESS.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_START_FAILED:\n                statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_START_FAILED.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_END_FAILED:\n                statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_END_FAILED.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_START_RUNNING:\n                statusTag = <Badge status=\"processing\" text={ExperimentConstants.TASK_START_RUNNING.desc}/>;\n                break;\n            case ExperimentConstants.TASK_END_RUNNING:\n                statusTag = <Badge status=\"processing\" text={ExperimentConstants.TASK_END_RUNNING.desc}/>;\n                break;\n            case ExperimentConstants.TASK_WAIT:\n                statusTag = <Tag color={\"geekblue\"}>{ExperimentConstants.TASK_WAIT.desc}</Tag>;\n                break;\n        }\n        return statusTag;\n    }\n\n    componentDidMount() {\n        const {queryTaskResult} = this.props;\n        const taskId = Task.getTaskId();\n        queryTaskResult(taskId);\n        this.infoTime = setInterval(() => {\n            let duration = this.getDuration();\n            this.setState({duration})\n        }, 1000)\n    }\n\n    getDuration() {\n        const {startTime, endTime} = this.props;\n        if (_.isEmpty(startTime)) {\n            return this.state.duration;\n        }\n        const start = moment(new Date(startTime));\n        const end = moment(_.isEmpty(endTime) ? new Date() : new Date(endTime));\n        const duration = moment.duration(end.diff(start));\n        const days = _.floor(duration.as('days'));\n        const hours = _.floor(duration.as('hours'));\n        const minutes = _.floor(duration.as('minutes'));\n        const seconds = _.floor(duration.as('seconds'));\n        return {\n            days,\n            hours: hours - days * 24,\n            minutes: minutes - hours * 60,\n            seconds: seconds - minutes * 60\n        };\n    }\n\n    renderDuration() {\n        const {duration} = this.state;\n        return (\n            <div>\n                {duration.days > 0 ? <span>{duration.days} days &nbsp;</span> : ''}\n                {duration.hours > 0 ? <span>{duration.hours} hours &nbsp;</span> : ''}\n                {duration.minutes > 0 ? <span>{duration.minutes} mins &nbsp;</span> : ''}\n                {duration.seconds > 0 ? <span>{duration.seconds} s</span> : ''}\n            </div>\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.infoTime);\n    }\n\n    render() {\n        const {taskName, startTime, endTime, status, resultStatus, experimentId, history} = this.props;\n        return (\n            <Descriptions column={1}>\n                <Descriptions.Item label=\"实验名称\">{taskName}</Descriptions.Item>\n                <Descriptions.Item label=\"运行时长\">{this.renderDuration()}</Descriptions.Item>\n                <Descriptions.Item label=\"任务状态\">\n                    {TaskInfo.statusRender(status, resultStatus)}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"开始时间\">{startTime}</Descriptions.Item>\n                <Descriptions.Item label=\"结束时间\">\n                    {\n                        endTime ? endTime :\n                            <Badge status=\"processing\" text=\"运行中\"/>\n                    }</Descriptions.Item>\n                <Descriptions.Item label=\"实验\"><a onClick={() => {\n                    history.push(`/experiment/detail/?${request.generateUrlSearch({id: experimentId})}`);\n                }}>{experimentId}</a></Descriptions.Item>\n            </Descriptions>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        taskName: task.taskName,\n        phase: task.phase,\n        startTime: task.startTime,\n        endTime: task.endTime,\n        status: task.status,\n        resultStatus: task.resultStatus,\n        experimentId: task.experimentId,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskResult: taskId => dispatch(Actions.queryTaskResult(taskId)),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskInfo);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderBar_header__20z3V\",\"Breadcrumb\":\"HeaderBar_Breadcrumb__1xi1w\",\"title\":\"HeaderBar_title__892kM\",\"backDoor\":\"HeaderBar_backDoor__FklaA\"};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport {Tree} from \"antd\";\nimport _ from 'lodash';\n\nconst {TreeNode} = Tree\n\nclass CategoryList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false\n        }\n    }\n\n    componentDidMount() {\n        const {getScenarioCategories} = this.props;\n        getScenarioCategories()\n    }\n\n    treeNode(data) {\n        if (_.isEmpty(data)) {\n            return;\n        }\n        return data.map(item => {\n            return (\n                <TreeNode title={item.name} key={item.categoryId} dataRef={item}>\n                    {\n                        _.isEmpty(item.children) ? <></> : this.treeNode(item.children)\n                    }\n                </TreeNode>\n            );\n        });\n    }\n\n    save() {\n        this.setState({editing: false});\n    }\n\n    edit() {\n        this.setState({editing: true});\n    }\n\n    render() {\n        const {categories, getScenarioCategories} = this.props;\n        const {editing} = this.state;\n        return (\n            <div>\n                {/*<div style={{paddingBottom: 16}}>*/}\n                {/*    {*/}\n                {/*        editing ?*/}\n                {/*            <Button type={\"primary\"} onClick={this.save.bind(this)}>保存修改</Button>*/}\n                {/*            :*/}\n                {/*            <Button type={\"primary\"} onClick={this.edit.bind(this)}>编辑目录</Button>*/}\n                {/*    }*/}\n                {/*</div>*/}\n                {\n                    !_.isEmpty(categories) ?\n                        <Tree defaultExpandAll={true} showLine={true}>\n                            {this.treeNode(categories)}\n                        </Tree>\n                        :\n                        <div></div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const category = state.category.toJS();\n    return {\n        categories: category.categories\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getScenarioCategories: query => dispatch(Actions.getScenarioCategories(query))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport CategoryList from \"./CategoryList\";\n\nclass Category extends React.Component {\n    render() {\n        return (\n            <div>\n                <CategoryList/>\n            </div>\n        )\n    }\n}\n\nexport default Category\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Types = {\n\n    GET_MACHINES_FOR_HOST_PAGEABLE: 'GET_MACHINES_FOR_HOST_PAGEABLE',\n    GET_MACHINES_FOR_HOST_PAGEABLE_RESULT: 'GET_MACHINES_FOR_HOST_PAGEABLE_RESULT',\n\n    GET_MACHINES_FOR_POD_PAGEABLE: 'GET_MACHINES_FOR_POD_PAGEABLE',\n    GET_MACHINES_FOR_POD_PAGEABLE_RESULT: 'GET_MACHINES_FOR_POD_PAGEABLE_RESULT',\n    GET_MACHINES_FOR_NODE_PAGEABLE: 'GET_MACHINES_FOR_NODE_PAGEABLE',\n    GET_MACHINES_FOR_NODE_PAGEABLE_RESULT: 'GET_MACHINES_FOR_NODE_PAGEABLE_RESULT',\n    BAN_MACHINE: 'BAN_MACHINE',\n    BAN_MACHINE_RESULT: 'BAN_MACHINE_RESULT',\n    UNBAN_MACHINE: 'UNBAN_MACHINE',\n    UNBAN_MACHINE_RESULT: 'UNBAN_MACHINE_RESULT',\n    CREATING_FROM_MACHINE_RESULT: 'CREATING_FROM_MACHINE_RESULT',\n    GET_MACHINES_FOR_APPLICATION_PAGEABLE: 'GET_MACHINES_FOR_APPLICATION_PAGEABLE',\n    GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT: 'GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT',\n    GET_APPLICATION_TOTAL_STATISTICS: 'GET_APPLICATION_TOTAL_STATISTICS',\n    GET_APPLICATION_TOTAL_STATISTICS_RESULT: 'GET_APPLICATION_TOTAL_STATISTICS_RESULT',\n    GET_HOST_TOTAL_STATISTICS: 'GET_HOST_TOTAL_STATISTICS',\n    GET_HOST_TOTAL_STATISTICS_RESULT: 'GET_HOST_TOTAL_STATISTICS_RESULT',\n\n    // Scenario\n    GET_SCENARIOS_PAGEABLE: 'GET_SCENARIOS_PAGEABLE',\n    GET_SCENARIOS_PAGEABLE_RESULT: 'GET_SCENARIOS_PAGEABLE_RESULT',\n    GET_SCENARIOS_STATISTICS: 'GET_SCENARIOS_STATISTICS',\n    GET_SCENARIOS_STATISTICS_RESULT: 'GET_SCENARIOS_STATISTICS_RESULT',\n    BAN_SCENARIO: 'BAN_SCENARIO',\n    BAN_SCENARIO_RESULT: 'BAN_SCENARIO_RESULT',\n    UNBAN_SCENARIO: 'UNBAN_SCENARIO',\n    UNBAN_SCENARIO_RESULT: 'UNBAN_SCENARIO_RESULT',\n    GET_SCENARIO_CATEGORIES: 'GET_SCENARIO_CATEGORIES',\n    GET_SCENARIO_CATEGORIES_RESULT: 'GET_SCENARIO_CATEGORIES_RESULT',\n\n    IMPORT_SCENARIOS: 'IMPORT_SCENARIOS',\n    IMPORT_SCENARIOS_RESULT: 'IMPORT_SCENARIOS_RESULT',\n    GET_SCENARIO_BY_ID: 'GET_SCENARIO_BY_ID',\n    GET_SCENARIO_BY_ID_RESULT: 'GET_SCENARIO_BY_ID_RESULT',\n    UPDATE_SCENARIO: 'UPDATE_SCENARIO',\n    UPDATE_SCENARIO_RESULT: 'UPDATE_SCENARIO_RESULT',\n    CREATING_FROM_SCENARIO_RESULT: 'CREATING_FROM_SCENARIO_RESULT',\n\n    GET_EXPERIMENT_STATISTICS: 'GET_EXPERIMENT_STATISTICS',\n    GET_EXPERIMENT_STATISTICS_RESULT: 'GET_EXPERIMENT_STATISTICS_RESULT',\n    GET_EXPERIMENTS_PAGEABLE: 'GET_EXPERIMENTS_PAGEABLE',\n    GET_EXPERIMENTS_PAGEABLE_RESULT: 'GET_EXPERIMENTS_PAGEABLE_RESULT',\n    CREATE_EXPERIMENT: 'CREATE_EXPERIMENT',\n    CREATE_EXPERIMENT_RESULT: 'CREATE_EXPERIMENT_RESULT',\n    GET_EXPERIMENT_BY_ID: 'GET_EXPERIMENT_BY_ID',\n    GET_EXPERIMENT_BY_ID_RESULT: 'GET_EXPERIMENT_BY_ID_RESULT',\n    GET_TASKS_BY_EXPERIMENT_ID: 'GET_TASKS_BY_EXPERIMENT_ID',\n    GET_TASKS_BY_EXPERIMENT_ID_RESULT: 'GET_TASKS_BY_EXPERIMENT_ID_RESULT',\n    FAIL_RETRY_EXPERIMENT: 'FAIL_RETRY_EXPERIMENT',\n    FAIL_RETRY_EXPERIMENT_RESULT: 'FAIL_RETRY_EXPERIMENT_RESULT',\n    END_EXPERIMENT: 'END_EXPERIMENT',\n    END_EXPERIMENT_RESULT: 'END_EXPERIMENT_RESULT',\n    CLEAR_EXPERIMENT_CREATING_RESULT: 'CLEAR_EXPERIMENT_CREATING_RESULT',\n    CLEAR_EXPERIMENT_DETAIL_RESULT: 'CLEAR_EXPERIMENT_DETAIL_RESULT',\n    UPDATE_EXPERIMENT: 'UPDATE_EXPERIMENT',\n    UPDATE_EXPERIMENT_RESULT: 'UPDATE_EXPERIMENT_RESULT',\n    START_EXPERIMENT: 'START_EXPERIMENT',\n    START_EXPERIMENT_RESULT: 'START_EXPERIMENT_RESULT',\n    QUERY_COLLECT_STATUS: 'QUERY_COLLECT_STATUS',\n    QUERY_COLLECT_STATUS_RESULT: 'QUERY_COLLECT_STATUS_RESULT',\n    ON_SCENARIO_CATEGORY_CHANGED: 'ON_SCENARIO_CATEGORY_CHANGED',\n    ON_SCENARIO_CHANGED: 'ON_SCENARIO_CHANGED',\n    ON_EXPERIMENT_NAME_CHANGED: 'ON_EXPERIMENT_NAME_CHANGED',\n    ON_METRIC_CHANGED: 'ON_METRIC_CHANGED',\n    ON_MACHINES_CHANGED: 'ON_MACHINES_CHANGED',\n    ON_DIMENSION_CHANGED: 'ON_DIMENSION_CHANGED',\n\n    GET_K8S_RESOURCE_STATISTICS: 'GET_K8S_RESOURCE_STATISTICS',\n    GET_K8S_RESOURCE_STATISTICS_RESULT: 'GET_K8S_RESOURCE_STATISTICS_RESULT',\n    GET_KUBERNETES_NAMESPACES: 'GET_KUBERNETES_NAMESPACES',\n    GET_KUBERNETES_NAMESPACES_RESULT: 'GET_KUBERNETES_NAMESPACES_RESULT',\n    GET_CLUSTER_INFO: 'GET_CLUSTER_INFO',\n    GET_CLUSTER_INFO_RESULT: 'GET_CLUSTER_INFO_RESULT',\n\n    GET_ANSIBLE_HOSTS: 'GET_ANSIBLE_HOSTS',\n    GET_ANSIBLE_HOSTS_RESULT: 'GET_ANSIBLE_HOSTS_RESULT',\n    GET_ANSIBLE_HOSTS_REGISTER: 'GET_ANSIBLE_HOSTS_REGISTER',\n    GET_ANSIBLE_HOSTS_REGISTER_RESULT: 'GET_ANSIBLE_HOSTS_REGISTER_RESULT',\n\n    GET_PROBES_PAGEABLE: 'GET_PROBES_PAGEABLE',\n    GET_PROBES_PAGEABLE_RESULT: 'GET_PROBES_PAGEABLE_RESULT',\n    BAN_PROBE: 'BAN_PROBE',\n    BAN_PROBE_RESULT: 'BAN_PROBE_RESULT',\n    UNBAN_PROBE: 'UNBAN_PROBE',\n    UNBAN_PROBE_RESULT: 'UNBAN_PROBE_RESULT',\n    UNINSTALL_PROBE: 'UNINSTALL_PROBE',\n    UNINSTALL_PROBE_RESULT: 'UNINSTALL_PROBE_RESULT',\n    INSTALL_PROBE_BY_ANSIBLE: 'INSTALL_PROBE_BY_ANSIBLE',\n    INSTALL_PROBE_BY_ANSIBLE_RESULT: 'INSTALL_PROBE_BY_ANSIBLE_RESULT',\n    QUERY_PROBES_INSTALLATION: 'QUERY_PROBES_INSTALLATION',\n    QUERY_PROBES_INSTALLATION_RESULT: 'QUERY_PROBES_INSTALLATION_RESULT',\n\n    FETCH_CHAOSTOOLS_SCENARIOS: 'FETCH_CHAOSTOOLS_SCENARIOS',\n    FETCH_CHAOSTOOLS_SCENARIOS_RESULT: 'FETCH_CHAOSTOOLS_SCENARIOS_RESULT',\n    GET_CHAOSTOOLS_DEPLOYED_STATISTICS: 'GET_CHAOSTOOLS_DEPLOYED_STATISTICS',\n    GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT: 'GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT',\n    DEPLOY_CHAOSTOOLS_TO_HOST: 'DEPLOY_CHAOSTOOLS_TO_HOST',\n    DEPLOY_CHAOSTOOLS_TO_HOST_RESULT: 'DEPLOY_CHAOSTOOLS_TO_HOST_RESULT',\n    UNDEPLOY_CHAOSTOOLS_FOR_HOST: 'UNDEPLOY_CHAOSTOOLS_FOR_HOST',\n    UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT: 'UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT',\n    UPGRADE_CHAOSTOOLS_TO_HOST: 'UPGRADE_CHAOSTOOLS_TO_HOST',\n    UPGRADE_CHAOSTOOLS_TO_HOST_RESULT: 'UPGRADE_CHAOSTOOLS_TO_HOST_RESULT',\n    FETCH_PUBLIC_CHAOSTOOLS: 'FETCH_PUBLIC_CHAOSTOOLS',\n    FETCH_PUBLIC_CHAOSTOOLS_RESULT: 'FETCH_PUBLIC_CHAOSTOOLS_RESULT',\n    FETCH_CHAOSTOOLS_OVERVIEW: 'FETCH_CHAOSTOOLS_OVERVIEW',\n    FETCH_CHAOSTOOLS_OVERVIEW_RESULT: 'FETCH_CHAOSTOOLS_OVERVIEW_RESULT',\n    FETCH_CHAOSTOOLS_VERSION_INFO: 'FETCH_CHAOSTOOLS_VERSION_INFO',\n    FETCH_CHAOSTOOLS_VERSION_INFO_RESULT: 'FETCH_CHAOSTOOLS_VERSION_INFO_RESULT',\n\n    QUERY_TASK_RESULT: 'QUERY_TASK_RESULT',\n    QUERY_TASK_RESULT_RESULT: 'QUERY_TASK_INFO_RESULT_RESULT',\n    QUERY_TASK_LOG: 'QUERY_TASK_LOG',\n    QUERY_TASK_LOG_RESULT: 'QUERY_TASK_LOG_RESULT',\n    QUERY_TASK_MONITOR: 'QUERY_TASK_MONITOR',\n    QUERY_TASK_MONITOR_RESULT: 'QUERY_TASK_MONITOR_RESULT',\n    HANDLE_ERROR: 'HANDLE_ERROR',\n    CLEAR_ERROR: 'CLEAR_ERROR',\n    HANDLE_CRITICAL_ERROR: 'HANDLE_CRITICAL_ERROR',\n    CLEAR_CRITICAL_ERROR: 'CLEAR_CRITICAL_ERROR',\n\n    QUERY_METRIC_CATEGORY: 'QUERY_METRIC_CATEGORY',\n    QUERY_METRIC_CATEGORY_RESULT: 'QUERY_METRIC_CATEGORY_RESULT',\n    CLEAR_ANSIBLE_REGISTER_RESULT: 'CLEAR_ANSIBLE_REGISTER_RESULT',\n\n}\n\nexport default Types;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {lazy, Suspense} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Category from \"./pages/Scenario/Category\";\nimport Task from \"./pages/Experiment/Task\";\n\n\nconst Overview = lazy(() => import('./pages/Overview'));\nconst Machine = lazy(() => import('./pages/Machine'))\nconst MachineRegister = lazy(() => import('./pages/Machine/Probe/Register'))\nconst ProbeManager = lazy(() => import('./pages/Machine/Probe/Manager'))\nconst Scenario = lazy(() => import(\"./pages/Scenario/List\"))\nconst ScenarioCategory = lazy(() => import(\"./pages/Scenario/Category\"))\nconst ScenarioDetail = lazy(() => import(\"./pages/Scenario/Detail\"))\nconst Experiment = lazy(() => import(\"./pages/Experiment\"))\nconst ExperimentCreating = lazy(() => import(\"./pages/Experiment/Creating\"))\nconst ExperimentDetail = lazy(() => import(\"./pages/Experiment/Detail\"))\nconst ExperimentTask = lazy(() => import(\"./pages/Experiment/Task\"))\nconst ChaostoolsMarket = lazy(() => import(\"./pages/Chaostools/Market\"))\nconst ChaostoolsDetail = lazy(() => import(\"./pages/Chaostools/Detail\"))\nconst ChaostoolsDeployed = lazy(() => import(\"./pages/Chaostools/Deployed\"))\n\nconst PathRouter = () => (\n    <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n            <Route exact path=\"/\" component={Machine}></Route>\n            <Route path=\"/overview\" component={Overview}></Route>\n            <Route exact path=\"/machine\" component={Machine}></Route>\n            <Route exact path=\"/machine/list\" component={Machine}></Route>\n            <Route exact path=\"/machine/register\" component={MachineRegister}></Route>\n            <Route exact path=\"/machine/probe\" component={ProbeManager}></Route>\n            <Route exact path=\"/scenario\" component={Scenario}></Route>\n            <Route exact path=\"/scenario/list\" component={Scenario}></Route>\n            <Route exact path=\"/scenario/category\" component={Category}></Route>\n            <Route exact path=\"/scenario/detail\" component={ScenarioDetail}></Route>\n            <Route exact path=\"/experiment\" component={Experiment}></Route>\n            <Route exact path=\"/experiment/list\" component={Experiment}></Route>\n            <Route exact path=\"/experiment/creating\" component={ExperimentCreating}></Route>\n            <Route exact path=\"/experiment/detail\" component={ExperimentDetail}></Route>\n            <Route exact path=\"/experiment/task\" component={Task}></Route>\n            <Route exact path=\"/chaostools/market\" component={ChaostoolsMarket}></Route>\n            <Route exact path=\"/chaostools/market/deployed\" component={ChaostoolsDeployed}></Route>\n            <Route exact path=\"/chaostools/market/detail\" component={ChaostoolsDetail}></Route>\n        </Switch>\n    </Suspense>\n)\n\nexport default PathRouter;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DesktopOutlined, FileOutlined, ProjectOutlined} from \"@ant-design/icons\";\nimport React from \"react\";\n\nexport const NavigationConfig = [\n    {\n        id: \"menu.experiment\",\n        key: \"/experiment\",\n        path: \"/experiment/list\",\n        name: \"实验管理\",\n        icon: <ProjectOutlined/>,\n        subs: [\n            {\n                id: \"menu.experiment.list\",\n                key: \"/experiment/list\",\n                path: \"/experiment/list\",\n                name: \"实验列表\",\n            },\n            {\n                id: \"menu.experiment.creating\",\n                key: \"/experiment/creating\",\n                path: \"/experiment/creating\",\n                name: \"创建实验\",\n            },\n        ]\n    },\n    {\n        id: \"menu.machine\",\n        key: \"/machine\",\n        path: \"/machine/list\",\n        name: \"机器管理\",\n        icon: <DesktopOutlined/>,\n        subs: [\n            {\n                id: \"menu.machine.list\",\n                key: \"/machine/list\",\n                path: \"/machine/list\",\n                name: \"机器列表\",\n            },\n            {\n                id: \"menu.machine.register\",\n                key: \"/machine/register\",\n                path: \"/machine/register\",\n                name: \"机器注册\",\n            },\n            {\n                id: \"menu.machine.probe\",\n                key: \"/machine/probe\",\n                path: \"/machine/probe\",\n                name: \"探针管理\",\n            },\n        ]\n    },\n    {\n        id: \"menu.scenario\",\n        key: \"/scenario\",\n        path: \"/scenario/list\",\n        name: \"场景管理\",\n        icon: <FileOutlined/>,\n        subs: [\n            {\n                id: \"menu.scenario.list\",\n                key: \"/scenario/list\",\n                path: \"/scenario/list\",\n                name: \"场景列表\",\n            },\n            {\n                id: \"menu.scenario.category\",\n                key: \"/scenario/category\",\n                path: \"/scenario/category\",\n                name: \"场景目录\",\n            }\n        ]\n    },\n    {\n        id: \"menu.chaostools\",\n        key: \"/chaostools\",\n        path: \"/chaostools/market\",\n        name: \"实验工具\",\n        icon: <ProjectOutlined/>,\n        subs: [\n            {\n                id: \"menu.chaostools.market\",\n                key: \"/chaostools/market\",\n                path: \"/chaostools/market\",\n                name: \"工具市场\",\n            },\n        ]\n    },\n]\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Breadcrumb} from \"antd\";\nimport styles from './HeaderBar.module.scss'\nimport {Link, withRouter} from 'react-router-dom';\nimport {NavigationConfig} from \"../Metadata/navigation\";\n\nconst NavigationMap = NavigationConfig.reduce((map, obj) => {\n    map[obj.path] = obj.name;\n    if (obj.subs.length > 0) {\n        obj.subs.reduce(\n            (_, sub) => {\n                map[sub.path] = sub.name;\n                return map\n            }, {}\n        )\n    }\n    return map;\n}, {})\n\nconst HeaderBar = withRouter(props => {\n    const {location} = props;\n    const pathSnippets = location.pathname.split('/').filter(i => i);\n    const extraBreadcrumbItems = pathSnippets.map((_, index) => {\n        const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n        return (\n            <Breadcrumb.Item key={url}>\n                <Link to={url}>{NavigationMap[url]}</Link>\n            </Breadcrumb.Item>\n        );\n    });\n    const breadcrumbItems = [].concat(extraBreadcrumbItems);\n    return (\n        <Breadcrumb className={styles.Breadcrumb}>{breadcrumbItems}</Breadcrumb>\n    );\n});\n\nexport default HeaderBar;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from \"lodash\";\n\nexport const handleMachinesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, pages, total, original} = action.pageableData;\n    if (_.isEmpty(machines)) {\n        return state.merge({loading: false});\n    }\n    let _machines = _.orderBy(machines, ['modifyTime'], ['desc'])\n    let s = {machines: _machines, pageSize, page, total}\n    switch (original) {\n        case \"host\":\n            return state.merge({loading: false, hosts: s})\n        case 'application':\n            return state.merge({loading: false, applications: s})\n        case 'pod':\n            return state.merge({loading: false, pods: s})\n        case 'node':\n            return state.merge({loading: false, nodes: s})\n        default:\n            return state.merge({loading: false, hosts: s})\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash';\n\nconst wrapHandlers = handlers => {\n    let catchErrorHandler = {};\n    for (let type in handlers) {\n        if (handlers.hasOwnProperty(type)) {\n            let handler = handlers[type];\n            catchErrorHandler[type] = (state, action) => {\n                try {\n                    return handler(state, action);\n                } catch (err) {\n                    return state;\n                }\n            };\n        }\n    }\n    return catchErrorHandler;\n};\n\nexport default (initialState, handlers) => {\n    if (_.isNil(initialState)) {\n        throw new Error('initial state is required');\n    }\n\n    if (_.isNil(handlers) || !_.isObject(handlers)) {\n        throw new Error('handlers must be an object');\n    }\n    const wrappedHandlers = wrapHandlers(handlers);\n    return (state = initialState, action) => {\n        if (_.isNil(action)) {\n            return state;\n        }\n        if (!_.has(action, 'type')) {\n            return state;\n        }\n        const handler = wrappedHandlers[action.type];\n        if (_.isNil(handler)) {\n            return state;\n        }\n\n        return handler(state, action);\n    };\n};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport {handleMachinesFetchingResult} from \"../pages/Machine/libs/pageable\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash'\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    hostStatistics: {\n        totals: 0,\n        onlines: 0,\n    },\n    // host\n    hosts: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    // application\n    applicationStatistics: {\n        apps: 0,\n        groups: 0,\n        machines: 0,\n    },\n    applications: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    // cluster\n    clusterStatistics: {\n        nodes: 0,\n        namespaces: 0,\n        pods: 0,\n    },\n    pods: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    nodes: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    }\n});\n\nconst getHostTotalStatisticsResult = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({hostStatistics: action.statistics})\n}\n\nconst getApplicationStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({applicationStatistics: action.statistics});\n}\n\nconst getK8sResourceStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({clusterStatistics: action.statistics});\n}\n\nconst banAndUnbanMachine = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {original} = action.data\n    let current = state.toJS();\n    let updateFunc = machine => {\n        if (machine.machineId === action.data.machineId) {\n            return action.data;\n        }\n        return machine;\n    };\n    switch (original) {\n        case \"host\":\n            return state.merge({loading: false, hosts: {machines: current.hosts.machines.map(updateFunc)}})\n        case 'application':\n            return state.merge({\n                loading: false,\n                applications: {\n                    machines: current.applications.machines.map(updateFunc)\n                }\n            })\n        case 'pod':\n            return state.merge({loading: false, pods: {machines: current.pods.machines.map(updateFunc)}})\n        case 'node':\n            return state.merge({loading: false, nodes: {machines: current.nodes.machines.map(updateFunc)}})\n        default:\n            return state.merge({loading: false, hosts: {machines: current.hosts.machines.map(updateFunc)}})\n    }\n}\n\nconst getMachinesForHostPageable = (state, action) => {\n    return state.merge({loading: true})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE]: getMachinesForHostPageable,\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_APPLICATION_TOTAL_STATISTICS_RESULT]: getApplicationStatistics,\n    [Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_HOST_TOTAL_STATISTICS_RESULT]: getHostTotalStatisticsResult,\n\n    [Types.GET_K8S_RESOURCE_STATISTICS_RESULT]: getK8sResourceStatistics,\n    [Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.BAN_MACHINE_RESULT]: banAndUnbanMachine,\n    [Types.UNBAN_MACHINE_RESULT]: banAndUnbanMachine,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport _ from 'lodash';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    page: 1, // 当前页码\n    pageSize: 10,\n    pages: 1, // 总页码数\n    total: 0, // 总记录数\n    scenarios: [], // 场景列表\n    statistics: {\n        total: 0,\n        basics: 0,\n        applications: 0,\n        containers: 0,\n    },\n    categories: []\n});\n\nconst getScenarioCategories = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst getScenarioCategoriesResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    let result = []\n    const parseFunc = category => {\n        let categories = [];\n        if (!_.isEmpty(category.children)) {\n            const children = category.children.map(child => {\n                return parseFunc(child);\n            })\n            categories.push(...children);\n        }\n        return categories.push({categoryId: category.categoryId, categoryName: category.categoryName});\n    }\n    const categories = action.data;\n    result.push(...categories.map(item => parseFunc(item)));\n    return state.merge({categories: result});\n}\n\n// state 初始化的值，action 是 reducer\nconst getScenarioStatistics = (state, action) => {\n    return state.merge({statistics: action.statistics});\n}\n\nconst handleScenariosFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {scenarios, pageSize, page, pages, total} = action.pageableData;\n    if (!_.isEmpty(scenarios)) {\n        let _scenarios = _.orderBy(scenarios, ['modifyTime'], ['desc'])\n        return state.merge({loading: false, scenarios: _scenarios, pageSize, page, pages, total})\n    } else {\n        return state.merge({loading: false, scenarios: [], pageSize, page, pages, total})\n    }\n}\n\nconst updateScenarioResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {scenarioId} = action.data;\n    let current = state.toJS();\n    let newScenarios = current.scenarios.map(item => {\n        if (item.scenarioId === scenarioId) {\n            return action.data;\n        }\n        return item;\n    });\n    return state.merge({loading: false, scenarios: newScenarios});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_CATEGORIES]: getScenarioCategories,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategoriesResult,\n    [Types.GET_SCENARIOS_STATISTICS_RESULT]: getScenarioStatistics,\n    [Types.GET_SCENARIOS_PAGEABLE_RESULT]: handleScenariosFetchingResult,\n    [Types.BAN_SCENARIO_RESULT]: updateScenarioResult,\n    [Types.UNBAN_SCENARIO_RESULT]: updateScenarioResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    scenarioId: '',\n    name: '',\n    code: '',\n    description: '',\n    status: -1,\n    version: '',\n    original: '',\n    supportScopeTypes: ['host', 'kubernetes'],\n    categoryIds: [],\n    createTime: '',\n    modifyTime: '',\n    parameters: [],\n    categories: [],\n});\n\nconst getScenarioById = (state, action) => {\n    return state.merge({loading: true})\n}\nconst getScenarioByIdResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {\n        scenarioId,\n        name,\n        code,\n        description,\n        status,\n        version,\n        original,\n        supportScopeTypes,\n        categories,\n        createTime,\n        modifyTime,\n        parameters,\n    } = action.data;\n    return state.merge({\n        loading: false,\n        scenarioId,\n        name,\n        code,\n        description,\n        status,\n        version,\n        original,\n        supportScopeTypes,\n        categoryIds: categories,\n        createTime,\n        modifyTime,\n        parameters,\n    });\n}\nconst getScenarioCategories = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, categories: action.data})\n}\n\nconst updateScenario = (state, action) => {\n    return state.merge({loading: true})\n}\n\nconst updateScenarioResult = (state, action) => {\n    return getScenarioByIdResult(state, action);\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_BY_ID]: getScenarioById,\n    [Types.GET_SCENARIO_BY_ID_RESULT]: getScenarioByIdResult,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n    [Types.UPDATE_SCENARIO]: updateScenario,\n    [Types.UPDATE_SCENARIO_RESULT]: updateScenarioResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\n\nexport const INITIAL_STATE = Map({\n    categories: []\n});\n\nconst getScenarioCategories = (state, action) => {\n    return state.merge({categories: action.data})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    statistics: {\n        totals: 0,\n        running: 0,\n        finished: 0,\n        success: 0,\n        failed: 0,\n        prepares: 0,\n    },\n    loading: false,\n    refreshing: false,\n    page: 1,\n    pageSize: 10,\n    total: 0,\n    experiments: [],\n\n});\n\nconst getExperimentStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({statistics: action.statistics});\n}\n\nconst handleExperimentsFetchingResult = (state, action) => {\n    const {experiments, pageSize, page, pages, total} = action.pageableData\n    if (!_.isEmpty(experiments)) {\n        let _experiments = _.orderBy(experiments, ['modifyTime'], ['desc'])\n        return state.merge({experiments: _experiments, pageSize, page, pages, total, loading: false, refresh: false})\n    } else {\n        return state.merge({experiments: [], pageSize, page, pages, total, loading: false, refresh: false})\n    }\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_EXPERIMENT_STATISTICS_RESULT]: getExperimentStatistics,\n    [Types.GET_EXPERIMENTS_PAGEABLE_RESULT]: handleExperimentsFetchingResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\nimport MachineConstants from \"../constants/MachineConstants\";\n\nconst MAX_PAGE_SIZE = 5000;\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    experimentName: \"\",\n    collect: false,\n    hosts: {\n        page: 1, // 当前页码\n        pageSize: MAX_PAGE_SIZE,\n        pages: 1, // 总页码数\n        total: 0, // 总记录数\n        machines: [], // 机器列表\n    },\n    pods: {\n        page: 1,\n        pageSize: MAX_PAGE_SIZE,\n        total: 0,\n        machines: [],\n        containers: [],\n    },\n    nodes: {\n        page: 1,\n        pageSize: MAX_PAGE_SIZE,\n        total: 0,\n        machines: [],\n    },\n    categories: [],\n    experimentId: \"\",\n    dimension: \"host\",\n    scenarios: {\n        loading: false,\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        scenarios: [],\n    },\n    scenarioSelected: null,\n    machinesSelected: [],\n    metricSelected: null,\n    metricCategories: [],\n    finished: false,\n    scenarioCategoryIdSelected: '',\n});\n\nconst handleMachinesFetching = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst handleMachinesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, total} = action.pageableData;\n    let items = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['desc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.machineId + \"-\" + machine.ip,\n                title: machine.ip,\n                ip: machine.ip,\n                hostname: machine.hostname,\n                description: machine.hostname + \"-\" + machine.ip,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n        })\n    }\n    return state.merge({loading: false, hosts: {machines: items, pageSize, page, total}})\n}\n\nconst handlePodsFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, pages, total} = action.pageableData;\n    let items = [];\n    let containers = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['desc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.machineId + \"-\" + machine.podName,\n                title: machine.podName,\n                podName: machine.podName,\n                description: machine.podName,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n            machine.containers.map(container => {\n                containers.push({\n                    key: machine.machineId + \"-\" + container.containerName,\n                    title: container.containerName + \"[\" + machine.podName + \"]\",\n                    description: machine.podName + \"-\" + container.containerName,\n                    disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n                })\n            })\n        })\n    }\n    return state.merge({loading: false, pods: {machines: items, containers, pageSize, page, total}});\n}\n\nconst handleNodesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, total} = action.pageableData;\n    let items = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['desc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.machineId + \"-\" + machine.nodeName,\n                title: machine.nodeName,\n                nodeName: machine.nodeName,\n                description: machine.nodeName,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n        })\n    }\n    return state.merge({loading: false, nodes: {machines: items, pageSize, page, total}})\n}\n\nconst getScenarioCategories = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    return state.merge({categories: action.data});\n}\n\nconst createExperiment = (state, action) => {\n    const {experimentId} = action.data;\n    if (_.isEmpty(experimentId)) {\n        return state;\n    }\n    return state.merge({experimentId, finished: true});\n}\n\nconst updateExperiment = (state, action) => {\n    const {experimentId} = action.data;\n    if (_.isEmpty(experimentId)) {\n        return state;\n    }\n    return state.merge({experimentId, finished: true});\n}\n\nconst getScenariosPageable = (state, action) => {\n    const {scenarios, pageSize, page, pages, total} = action.pageableData\n    if (!_.isEmpty(scenarios)) {\n        let _scenarios = _.orderBy(scenarios, ['modifyTime'], ['desc'])\n        return state.merge({\n            scenarios: {\n                scenarios: _scenarios,\n                pageSize,\n                page,\n                pages,\n                total,\n                loading: false,\n                refresh: false\n            }\n        })\n    } else {\n        return state.merge({scenarios: {scenarios: [], pageSize, page, pages, total, loading: false, refresh: false}})\n    }\n}\n\nconst clearExperimentCreatingResult = (state, action) => {\n    return state.merge({\n        loading: false,\n        refreshing: false,\n        experimentName: \"\",\n        hosts: {\n            loading: false,\n            refreshing: false,\n            page: 1, // 当前页码\n            pageSize: 2,\n            pages: 1, // 总页码数\n            total: 0, // 总记录数\n            machines: [], // 机器列表\n        },\n        categories: [],\n        experimentId: \"\",\n        dimension: \"host\",\n        scenarios: {\n            loading: false,\n            page: 1,\n            pageSize: 20,\n            pages: 0,\n            total: 0,\n            scenarios: [],\n        },\n        scenarioSelected: null,\n        machinesSelected: [],\n        metricSelected: null,\n        finished: false,\n        scenarioCategoryIdSelected: '',\n    })\n}\n\nconst getExperimentById = (state, action) => {\n    const {experimentId, experimentName, dimension, machines, scenarios, metrics} = action.data;\n    let scenarioSelected = null;\n    let categoryId = '';\n    if (!_.isEmpty(scenarios)) {\n        const scenario = scenarios[0];\n        scenarioSelected = scenario;\n        if (!_.isEmpty(scenario.categories)) {\n            categoryId = scenario.categories[0].categoryId;\n            scenarioSelected = {...scenarioSelected, categoryId}\n        }\n    }\n    let metricSelected = null;\n    if (!_.isEmpty(metrics)) {\n        metricSelected = metrics[0];\n    }\n    let machinesSelected = [];\n    if (!_.isEmpty(machines)) {\n        machines.map(machine => machinesSelected.push(machine.machineId + \"-\" + machine.ip));\n    }\n    return state.merge({\n        dimension: dimension ? dimension : \"host\",\n        experimentId,\n        experimentName,\n        scenarioSelected,\n        machinesSelected,\n        metricSelected,\n        scenarioCategoryIdSelected: categoryId\n    });\n}\n\nconst creatingFromMachine = (state, action) => {\n    const {dimension, machineId, machineIp} = action.data;\n    const machinesSelected = [machineId + \"-\" + machineIp];\n    return state.merge({dimension, machinesSelected});\n}\n\nconst creatingFromScenario = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {categoryId, scenarioId} = action.data;\n    const scenario = {categoryId, scenarioId}\n    return state.merge({scenarioSelected: scenario})\n}\n\nconst queryMetricCategory = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    return state.merge({metricCategories: action.data});\n}\n\nconst queryCollectStatus = (state, action) => {\n    return state.merge({collect: action.data});\n}\n\nconst onScenarioCategoryChanged = (state, action) => {\n    const {categoryId} = action.data;\n    return state.merge({scenarioCategoryIdSelected: categoryId});\n}\n\nconst onScenarioChanged = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({scenarioSelected: null});\n    }\n    const {scenario} = action.data;\n    return state.merge({scenarioSelected: scenario});\n}\n\nconst onExperimentNameChanged = (state, action) => {\n    const {name} = action.data;\n    return state.merge({experimentName: name});\n}\n\nconst onMetricChanged = (state, action) => {\n    const {metric} = action.data;\n    return state.merge({metricSelected: metric});\n}\n\nconst onMachinesChanged = (state, action) => {\n    const {machines} = action.data;\n    return state.merge({machinesSelected: machines});\n}\n\nconst onDimensionChanged = (state, action) => {\n    const {dimension} = action.data;\n    return state.merge({dimension});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE]: handleMachinesFetching,\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n    [Types.CREATE_EXPERIMENT_RESULT]: createExperiment,\n    [Types.UPDATE_EXPERIMENT_RESULT]: updateExperiment,\n    [Types.GET_SCENARIOS_PAGEABLE_RESULT]: getScenariosPageable,\n    [Types.CLEAR_EXPERIMENT_CREATING_RESULT]: clearExperimentCreatingResult,\n    [Types.GET_EXPERIMENT_BY_ID_RESULT]: getExperimentById,\n    [Types.CREATING_FROM_MACHINE_RESULT]: creatingFromMachine,\n    [Types.CREATING_FROM_SCENARIO_RESULT]: creatingFromScenario,\n    [Types.QUERY_METRIC_CATEGORY_RESULT]: queryMetricCategory,\n    [Types.QUERY_COLLECT_STATUS_RESULT]: queryCollectStatus,\n    [Types.ON_SCENARIO_CATEGORY_CHANGED]: onScenarioCategoryChanged,\n    [Types.ON_SCENARIO_CHANGED]: onScenarioChanged,\n    [Types.ON_EXPERIMENT_NAME_CHANGED]: onExperimentNameChanged,\n    [Types.ON_METRIC_CHANGED]: onMetricChanged,\n    [Types.ON_MACHINES_CHANGED]: onMachinesChanged,\n    [Types.ON_DIMENSION_CHANGED]: onDimensionChanged,\n    [Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT]: handlePodsFetchingResult,\n    [Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT]: handleNodesFetchingResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    experimentName: \"\",\n    taskCount: 0,\n    dimension: \"\",\n    createTime: \"\",\n    lastTaskCreateTime: \"\",\n    lastTaskStatus: null,\n    lastTaskResult: null,\n    machines: [],\n    scenarios: [],\n    metrics: [],\n    tasks: [],\n    taskId: \"\",\n});\n\nconst getExperimentById = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {\n        experimentName,\n        taskCount,\n        dimension,\n        createTime,\n        lastTaskCreateTime,\n        lastTaskStatus,\n        lastTaskResult,\n        machines,\n        scenarios,\n        metrics\n    } = action.data;\n\n    return state.merge({\n        loading: false,\n        experimentName,\n        taskCount,\n        dimension,\n        createTime,\n        lastTaskCreateTime,\n        lastTaskStatus,\n        lastTaskResult,\n        machines,\n        scenarios,\n        metrics\n    });\n}\n\nconst getTasksByExperimentId = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, tasks: action.data});\n}\n\nconst clearExperimentDetailResult = (state, action) => {\n    return state.merge({\n        loading: false,\n        experimentName: \"\",\n        taskCount: 0,\n        dimension: \"\",\n        createTime: \"\",\n        lastTaskCreateTime: \"\",\n        lastTaskStatus: null,\n        lastTaskResult: null,\n        machines: [],\n        scenarios: [],\n        metrics: [],\n        tasks: [],\n        taskId: \"\",\n    })\n}\n\nconst startExperiment = (state, action) => {\n    const {taskId} = action.data;\n    if (_.isEmpty(taskId)) {\n        return state;\n    }\n    return state.merge({taskId});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_EXPERIMENT_BY_ID_RESULT]: getExperimentById,\n    [Types.GET_TASKS_BY_EXPERIMENT_ID_RESULT]: getTasksByExperimentId,\n    [Types.CLEAR_EXPERIMENT_DETAIL_RESULT]: clearExperimentDetailResult,\n    [Types.START_EXPERIMENT_RESULT]: startExperiment,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    experimentId: \"\",\n    taskName: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    status: 0,\n    resultStatus: null,\n    executeLoading: false,\n    execute: {},\n    metrics: [],\n    loggingLoading: false,\n    logging: [],\n    monitor: {\n        name: \"\",\n        params: [],\n        metrics: [],\n    }\n});\n\n\nconst queryTaskResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {taskName, startTime, endTime, status, resultStatus, experimentId} = action.data;\n    return state.merge({taskName, startTime, endTime, status, resultStatus, experimentId});\n}\n\nconst failRetryExperiment = (state, action) => {\n    return state.merge({executeLoading: true})\n}\nconst failRetryExperimentResult = (state, action) => {\n    return state.merge({executeLoading: false})\n}\n\nconst endExperiment = (state, action) => {\n    return state.merge({executeLoading: true})\n}\nconst endExperimentResult = (state, action) => {\n    return state.merge({executeLoading: false})\n}\n\nconst queryTaskLog = (state, action) => {\n    return state.merge({loggingLoading: true})\n}\nconst queryTaskLogResult = (state, action) => {\n    const logging = action.data ? action.data : [];\n    return state.merge({logging, loggingLoading: false})\n}\n\nconst queryTaskMonitorResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {name, code, params, metricTask} = action.data[0];\n    let metrics = [];\n    if (!_.isEmpty(metricTask)) {\n        metricTask.map(data => {\n            if (!_.isEmpty(data) && !_.isEmpty(data.metrics)) {\n                data.metrics.map(metric => {\n                    metrics.push({\n                        ip: data.ip,\n                        value: Number(metric.value).toFixed(4),\n                        date: metric.date,\n                    })\n                });\n            }\n        })\n    }\n    const _metrics = _.orderBy(metrics, ['date'], ['asc'])\n    return state.merge({monitor: {metrics: _metrics, name, code, params}});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.QUERY_TASK_RESULT_RESULT]: queryTaskResult,\n    [Types.FAIL_RETRY_EXPERIMENT]: failRetryExperiment,\n    [Types.FAIL_RETRY_EXPERIMENT_RESULT]: failRetryExperimentResult,\n    [Types.QUERY_TASK_LOG]: queryTaskLog,\n    [Types.QUERY_TASK_LOG_RESULT]: queryTaskLogResult,\n    [Types.QUERY_TASK_MONITOR_RESULT]: queryTaskMonitorResult,\n    [Types.END_EXPERIMENT]: endExperiment,\n    [Types.END_EXPERIMENT_RESULT]: endExperimentResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    page: 1,\n    pageSize: 10,\n    pages: 1,\n    total: 0,\n    probes: [],\n})\n\nconst getProbePageableFetching = (state, action) => {\n    return state.merge({loading: true});\n}\nconst getProbePageableFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {probes, pageSize, page, pages, total, original} = action.pageableData;\n    if (!_.isEmpty(probes)) {\n        let _probes = _.orderBy(probes, ['modifyTime'], ['desc'])\n        return state.merge({probes: _probes, pageSize, page, total, loading: false})\n    }\n    return state.merge({probes: [], pageSize, page, total, loading: false});\n}\n\nconst updateProbe = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {probeId} = action.data;\n    let current = state.toJS();\n    let newProbes = current.probes.map(item => {\n        if (item.probeId === probeId) {\n            return action.data;\n        }\n        return item;\n    });\n    return state.merge({loading: false, probes: newProbes});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_PROBES_PAGEABLE]: getProbePageableFetching,\n    [Types.GET_PROBES_PAGEABLE_RESULT]: getProbePageableFetchingResult,\n    [Types.BAN_PROBE_RESULT]: updateProbe,\n    [Types.UNBAN_PROBE_RESULT]: updateProbe,\n    [Types.UNINSTALL_PROBE]: updateProbe,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    ansibleHostsLoading: false,\n    ansibleHosts: [],\n    ansibleInstallationsLoading: false,\n    ansibleInstallations: [],\n    probesInstallationsLoading: false,\n    probesInstallations: [],\n});\n\nconst getAnsibleHosts = (state, action) => {\n    return state.merge({ansibleHostsLoading: true})\n}\n\nconst getAnsibleHostsResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({ansibleHostsLoading: false});\n    }\n    return state.merge({ansibleHostsLoading: false, ansibleHosts: action.data});\n}\n\nconst installProbes = (state, action) => {\n    return state.merge({ansibleInstallationsLoading: true})\n}\n\nconst installProbesResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({ansibleInstallationsLoading: false});\n    }\n    return state.merge({ansibleInstallationsLoading: false, ansibleInstallations: action.data});\n}\n\nconst queryProbesInstallation = (state, action) => {\n    return state.merge({probesInstallationsLoading: true});\n}\n\nconst queryProbesInstallationResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({probesInstallationsLoading: false});\n    }\n    const current = state.toJS();\n    const {ansibleHosts} = current;\n    const probesInstallations = action.data;\n    probesInstallations.map(probe => {\n        ansibleHosts.map(host => {\n            if (probe.host === host.host || probe.ip === host.host) {\n                host.status = probe.status;\n            }\n        })\n    })\n    return state.merge({probesInstallationsLoading: false, probesInstallations: action.data, ansibleHosts});\n}\n\nconst clearAnsibleRegisterResult = (state, action) => {\n    return state.merge({ansibleHosts: [], ansibleInstallations: [], probesInstallations: []})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_ANSIBLE_HOSTS]: getAnsibleHosts,\n    [Types.GET_ANSIBLE_HOSTS_RESULT]: getAnsibleHostsResult,\n    [Types.INSTALL_PROBE_BY_ANSIBLE]: installProbes,\n    [Types.INSTALL_PROBE_BY_ANSIBLE_RESULT]: installProbesResult,\n    [Types.QUERY_PROBES_INSTALLATION]: queryProbesInstallation,\n    [Types.QUERY_PROBES_INSTALLATION_RESULT]: queryProbesInstallationResult,\n    [Types.CLEAR_ANSIBLE_REGISTER_RESULT]: clearAnsibleRegisterResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    refreshing: false,\n    hosts: {\n        loading: false,\n        refreshing: false,\n        page: 1, // 当前页码\n        pageSize: 10,\n        pages: 1, // 总页码数\n        total: 0, // 总记录数\n        machines: [], // 机器列表\n    },\n});\n\nconst handleMachinesFetchingResult = (state, action) => {\n    const {machines, pageSize, page, pages, total} = action.pageableData\n    let s;\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['modifyTime'], ['desc'])\n        s = {machines: _machines, pageSize, page, pages, total, loading: false, refresh: false}\n    } else {\n        s = {machines: [], pageSize, page, pages, total, loading: false, refresh: false}\n    }\n    return state.merge({hosts: s})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport createReducer from \"./createReducer\";\nimport Types from \"../actions/Types\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    tools: {\n        loading: false,\n        name: \"\",\n        title: \"\",\n        subTitle: \"\",\n        description: \"\",\n        webSite: \"\",\n        logo: \"\",\n        latest: \"\",\n        copyright: \"\",\n        readme: \"\",\n    },\n\n    versionInfo: {\n        loading: true,\n        version: \"\",\n        releaseUrl: \"\",\n        downloadUrl: {},\n        changelog: \"\",\n        scenarioFiles: [],\n    },\n    // file: scenarios\n    scenariosLoading: false,\n    scenarios: [],\n    // {\n    //     file: xxx,\n    //     loading: false,\n    //     scenarios: [], // 场景列表,\n    //     scenarioList: [],\n    //     importScenarioCount: 0,\n    // },\n});\n\nconst fetchChaostoolsOverview = (state, action) => {\n    return state.merge({tools: {loading: true}});\n}\n\nconst fetchChaostoolsOverviewResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {name, title, subTitle, description, webSite, logo, latest, copyright, readme} = action.data;\n    return state.merge({\n        tools: {\n            loading: false,\n            name,\n            title,\n            subTitle,\n            description,\n            webSite,\n            logo,\n            latest,\n            copyright,\n            readme\n        }\n    });\n}\n\nconst importScenarios = (state, action) => {\n    const {scenarioCount, file} = action;\n    const current = state.toJS();\n    if (!_.isEmpty(current.scenarios)) {\n        const scenarios = current.scenarios.map(item => {\n            if (item.file === file) {\n                item.importScenarioCount = scenarioCount;\n            }\n            return item;\n        })\n        return state.merge({scenarios: scenarios})\n    }\n    return state;\n}\n\nconst fetchChaostoolsVersionInfo = (state, action) => {\n    return this.state.merge({versionInfo: {loading: true}});\n}\n\nconst fetchChaostoolsVersionInfoResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {version, releaseUrl, downloadUrl, changelog, scenarioFiles} = action.data;\n    return state.merge({\n        versionInfo: {\n            loading: false, version, releaseUrl, downloadUrl, changelog, scenarioFiles\n        }\n    });\n}\n\nconst fetchChaostoolsScenarios = (state, action) => {\n    return state.merge({scenariosLoading: true});\n}\n\nconst fetchChaostoolsScenariosResult = (state, action) => {\n    const {items, file} = action.data;\n    if (_.isEmpty(items)) {\n        return state;\n    }\n    const current = state.toJS();\n    const {name} = current.tools;\n    const {scenarioFiles} = current.versionInfo;\n    if (!_.isEmpty(scenarioFiles) &&\n        current.scenarios.length == scenarioFiles.length) {\n        current.scenarios = [];\n    }\n    let scenarioList = [];\n    let scenarios = [];\n    items.map(item => {\n        const actions = item.actions.map(action => {\n            scenarioList.push({\n                \"name\": name + \".\" + item.target + \".\" + action.action,\n                \"longDesc\": action.longDesc,\n            });\n            return {...action, name: action.action};\n        });\n        item.actions = actions;\n        scenarios.push(item);\n    })\n    current.scenarios.push({\n        loading: false,\n        file,\n        scenarios,\n        scenarioList,\n    })\n    return state.merge({scenarios: current.scenarios});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW]: fetchChaostoolsOverview,\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT]: fetchChaostoolsOverviewResult,\n    [Types.FETCH_CHAOSTOOLS_VERSION_INFO]: fetchChaostoolsVersionInfo,\n    [Types.FETCH_CHAOSTOOLS_VERSION_INFO_RESULT]: fetchChaostoolsVersionInfoResult,\n    [Types.FETCH_CHAOSTOOLS_SCENARIOS]: fetchChaostoolsScenarios,\n    [Types.FETCH_CHAOSTOOLS_SCENARIOS_RESULT]: fetchChaostoolsScenariosResult,\n    [Types.IMPORT_SCENARIOS_RESULT]: importScenarios,\n\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    refreshing: false,\n    chaostools: [],\n    publics: [],\n});\n\nconst fetchPublicChaostools = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst fetchPublicChaostoolsResult = (state, action) => {\n    const {publics} = action.data;\n    if (_.isEmpty(publics)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, publics});\n}\n\nconst fetchChaostoolsOverviewResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {name, title, subTitle, description, webSite, logo, latest, copyright, readme} = action.data;\n    const current = state.toJS();\n    const {chaostools, publics} = current;\n    let tools = chaostools\n    if (!_.isEmpty(publics) && publics.length === chaostools.length) {\n        tools = [];\n    }\n    tools.push({\n        name, title, subTitle, description, webSite, logo, latest, copyright, readme\n    })\n    return state.merge({chaostools: tools});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.FETCH_PUBLIC_CHAOSTOOLS]: fetchPublicChaostools,\n    [Types.FETCH_PUBLIC_CHAOSTOOLS_RESULT]: fetchPublicChaostoolsResult,\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT]: fetchChaostoolsOverviewResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport Types from '../actions/Types';\nimport createReducer from './createReducer';\n\nexport const INITIAL_STATE = Map({\n    requestId: \"\",\n    code: -1,\n    message: null,\n    criticalError: null\n});\n\nconst handleError = (state, action) => {\n    return state.merge({\n        requestId: action.requestId,\n        code: action.code,\n        message: action.message\n    });\n};\n\nconst handlerCriticalError = (state, action) => state.merge({criticalError: action.error});\n\nconst clearError = state => state.merge({requestId: \"\", code: -1, message: null});\n\nconst clearCriticalError = state => state.merge({criticalError: null});\n\nconst ACTION_HANDLERS = {\n    [Types.HANDLE_ERROR]: handleError,\n    [Types.CLEAR_ERROR]: clearError,\n    [Types.HANDLE_CRITICAL_ERROR]: handlerCriticalError,\n    [Types.CLEAR_CRITICAL_ERROR]: clearCriticalError\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {combineReducers} from \"redux\";\nimport machine from './Machine'\nimport scenario from './Scenario'\nimport scenarioDetail from './ScenarioDetail'\nimport category from './Category'\nimport experiment from './Experiment'\nimport experimentCreating from './ExperimentCreating'\nimport experimentDetail from './ExperimentDetail'\nimport taskDetail from './ExperimentTaskDetail'\nimport probe from './Probe'\nimport register from './Register'\nimport chaostoolsDeploy from './ChaostoolsDeploy'\nimport chaostoolsDetail from './ChaostoolsDetail'\nimport chaostools from './Chaostools'\nimport error from './Error'\n\nexport default combineReducers({\n    machine,\n    probe,\n    register,\n    scenario,\n    scenarioDetail,\n    category,\n    experiment,\n    experimentCreating,\n    experimentDetail,\n    taskDetail,\n    chaostoolsDeploy,\n    chaostoolsDetail,\n    error,\n    chaostools,\n})","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst NetworkConstants = {\n\tTIMEOUT_INTERVAL: 30 * 1000\n};\n\nexport default NetworkConstants;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiConfig = {\n    baseURL: '/api',\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n    }\n};\n\nexport default ApiConfig;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst refresh = () => {\n    console.log(\"convert-api-refresh\");\n};\n\nconst convertApi = api => {\n    let {axiosInstance} = api;\n    const {request} = axiosInstance;\n\n    axiosInstance.request = (config = {}) => {\n        const {data} = config;\n        const baseURL = api.getBaseURL();\n        const isAtkReq = baseURL.indexOf('/gungnir/') > -1;\n\n        const params = {...data};\n\n        return new Promise((resolve, reject) => {\n            request({\n                ...config,\n                data: params\n            })\n                .then(response => {\n                    const {status} = response;\n\n                    if (status === 405 && !isAtkReq) {\n                        refresh();\n                    }\n\n                    resolve(response);\n                })\n                .catch(err => {\n                    if (err.message === 'Network Error' && !isAtkReq) {\n                        refresh();\n                    }\n                    reject(err);\n                });\n        });\n    };\n\n    return api;\n};\n\nexport {convertApi};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport apisauce from 'apisauce';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport ApiConfig from './api.config';\nimport {convertApi} from './convertApi';\n\nconst apiCache = {};\n\nconst createApi = (key = 'default', config = {}) => {\n    if (apiCache[key]) {\n        return apiCache[key];\n    }\n\n    const api = apisauce.create({\n        ...ApiConfig,\n        ...config\n    });\n\n    api.addRequestTransform(request => {\n        const parsedSearchParams = queryString.parse(window.location.search, {parseNumbers: true});\n        let params = request.params;\n\n        const test = parsedSearchParams['test'];\n        if (test === 1 || test === 2) {\n            if (_.isEmpty(params)) {\n                request.params = {test};\n            } else {\n                request.params = {...params, test};\n            }\n        }\n    });\n\n    api.addResponseTransform(response => {\n        if (!_.isEmpty(response)) {\n            const {ok, data: responseData} = response;\n            if (ok && !_.isEmpty(responseData)) {\n                const {success, code, message} = responseData;\n                if (!success && !_.isEmpty(code)) {\n                    response.ok = false;\n                    response.problem = code;\n                    response.message = message;\n                }\n            }\n        }\n    });\n\n    if (process.env.NODE_ENV === 'development__') {\n        const {mock} = queryString.parse(window.location.search);\n        // if (mock) {\n            const {mockApi} = require('./mockApi');\n            return mockApi(api);\n        // }\n    }\n\n    const wrapper = convertApi(api);\n    apiCache[key] = wrapper;\n    return wrapper;\n};\n\nexport default createApi;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 应用统计\nconst getApplicationTotalStatistics = active => api.get('GetApplicationTotalStatistics', {active});\n// 应用，获取\nconst getMachinesForApplicationPageable = query => api.post('GetMachinesForApplicationPageable', {query})\n\n\n// 获取应用&应用分组\nconst getApplicationsAndGroups = active => api.get('GetApplicationsAndGroups', {active});\n\n// 获取机器列表\nconst getMachinesPageable = (query) => api.get('GetMachines');\n// 禁用机器\nconst banMachine = cid => api.post('BanMachine');\n// 启用机器\nconst unbanMachine = cid => api.post('UnbanMachine');\n\n// Experiment-Application Selected\n// 获取应用\nconst getApplications = () => api.get('GetApplications');\n// 获取应用分组\nconst getApplicationGroups = app => api.get('GetApplicationGroups');\n// 获取演练的机器\nconst getMachines = (app, group) => api.get('GetMachines');\n\nexport default {\n    getApplicationTotalStatistics,\n    getMachinesForApplicationPageable,\n    getMachinesPageable,\n    getApplications,\n    getApplicationGroups,\n    getMachines,\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash'\nimport {Errors} from \"../constants/Errors\";\n\nexport const getError = (response, defaultError) => {\n    if (!_.isEmpty(response)) {\n        const {message, code, requestId} = response;\n        if (!_.isEmpty(message)) {\n            return {\n                code, message, requestId\n            }\n        }\n    }\n    return defaultError ? defaultError : Errors.UNKNOWN_ERROR.message;\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport ApplicationApi from \"../services/ApplicationApi\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchApplicationTotalStatisticFetching() {\n        while (true) {\n            const {active} = yield take(Types.GET_APPLICATION_TOTAL_STATISTICS);\n            yield fork(getApplicationTotalStatistics, active);\n        }\n    }\n\n    function* getApplicationTotalStatistics(active) {\n        const {response, timeout} = yield race({\n            response: call(ApplicationApi.getApplicationTotalStatistics, active),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getApplicationTotalStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getApplicationTotalStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchMachinesForApplicationFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE);\n            yield fork(getMachinesForApplicationPageable, filter)\n        }\n    }\n\n    function* getMachinesForApplicationPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ApplicationApi.getMachinesForApplicationPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForApplicationPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForApplicationPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchApplicationTotalStatisticFetching,\n        watchMachinesForApplicationFetching\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 获取场景列表\nconst getScenariosPageable = query => api.post('GetScenariosPageable', query);\nconst getScenarioById = scenarioId => api.post('GetScenarioById', scenarioId);\nconst getScenarioStatistics = () => api.post('GetScenarioStatistics');\n\n// 获取场景目录\nconst getScenarioCategories = (query) => api.post('GetScenarioCategories', query);\n\nconst updateScenario = scenario => api.post('UpdateScenario', scenario);\nconst importScenarios = (scenarios, file) => api.post('ImportScenarios', scenarios, file);\nconst upgradeScenarios = scenarios => api.post('UpgradeScenarios', scenarios);\nconst banScenario = scenarioId => api.post('BanScenario', scenarioId);\nconst unbanScenario = scenarioId => api.post('UnbanScenario', scenarioId);\n\nexport default {\n    getScenarioById,\n    getScenariosPageable,\n    getScenarioStatistics,\n    getScenarioCategories,\n    updateScenario,\n    importScenarios,\n    upgradeScenarios,\n    banScenario,\n    unbanScenario,\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ScenarioApi from \"../services/ScenarioApi\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchGetScenarioById() {\n        while (true) {\n            const scenarioId = yield take(Types.GET_SCENARIO_BY_ID);\n            yield fork(getScenarioById, scenarioId);\n        }\n    }\n\n    function* getScenarioById(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioById, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenarioByIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield  all([\n                put(Actions.getScenarioByIdResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenarioStatisticsFetching() {\n        while (true) {\n            yield take(Types.GET_SCENARIOS_STATISTICS);\n            yield fork(getScenarioStatistics);\n        }\n    }\n\n    function* getScenarioStatistics() {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenariosStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield  all([\n                put(Actions.getScenariosStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenariosFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_SCENARIOS_PAGEABLE);\n            yield fork(getScenariosPageable, filter)\n        }\n    }\n\n    function* getScenariosPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenariosPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total} = data.data;\n                if (data.success) {\n                    yield put(Actions.getScenariosPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        scenarios: data.data.data,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getScenariosPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenarioCategoriesFetching() {\n        while (true) {\n            const {query} = yield take(Types.GET_SCENARIO_CATEGORIES);\n            yield fork(getScenarioCategories, query)\n        }\n    }\n\n    function* getScenarioCategories(query) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioCategories, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenarioCategoriesResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getScenarioCategoriesResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchBanScenario() {\n        while (true) {\n            const {scenarioId} = yield take(Types.BAN_SCENARIO);\n            yield fork(banScenario, scenarioId);\n        }\n    }\n\n    function* banScenario(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.banScenario, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.banScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUnbanScenario() {\n        while (true) {\n            const {scenarioId} = yield take(Types.UNBAN_SCENARIO);\n            yield fork(unbanScenario, scenarioId);\n        }\n    }\n\n    function* unbanScenario(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.unbanScenario, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.unbanScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUpdateScenario() {\n        while (true) {\n            const {scenario: scenario} = yield take(Types.UPDATE_SCENARIO);\n            yield fork(updateScenario, scenario);\n        }\n    }\n\n    function* updateScenario(scenario) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.updateScenario, scenario),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.updateScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.updateScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchGetScenarioById,\n        watchScenariosFetching,\n        watchScenarioStatisticsFetching,\n        watchScenarioCategoriesFetching,\n        watchBanScenario,\n        watchUnbanScenario,\n        watchUpdateScenario,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getHostTotalStatistics = () => api.post('GetHostTotalStatistics');\nconst getMachinesForHostPageable = query => api.post('GetMachinesForHost', query);\nconst getAnsibleHosts = () => api.post('GetAnsibleHosts');\nconst getAnsibleHostsRegister = (hosts) => api.post('GetAnsibleHostsRegister', hosts);\nconst getProbesPageable = query => api.post('GetProbesPageable', query);\nconst banMachine = machineId => api.post('BanMachine', machineId);\nconst unbanMachine = machineId => api.post('UnbanMachine', machineId);\n\nexport default {\n    getHostTotalStatistics,\n    getMachinesForHostPageable,\n    getAnsibleHosts,\n    getAnsibleHostsRegister,\n    getProbesPageable,\n    banMachine,\n    unbanMachine,\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Actions from \"../actions/Actions\";\nimport HostApi from \"../services/HostApi\";\nimport {getError} from \"./response\";\nimport {Errors} from \"../constants/Errors\";\n\nexport default () => {\n\n    function* watchGetHostTotalStatistics() {\n        while (true) {\n            yield take(Types.GET_HOST_TOTAL_STATISTICS);\n            yield fork(getHostTotalStatistics)\n        }\n    }\n\n    function* getHostTotalStatistics() {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getHostTotalStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getHostTotalStatisticsResult(data.data));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getHostTotalStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchMachinesForHostFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_MACHINES_FOR_HOST_PAGEABLE);\n            yield fork(getMachinesForHostPageable, filter)\n        }\n    }\n\n    function* getMachinesForHostPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getMachinesForHostPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForHostPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForHostPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchBanMachine() {\n        while (true) {\n            const machineId = yield take(Types.BAN_MACHINE);\n            yield fork(banMachine, machineId);\n        }\n    }\n\n    function* banMachine(machineId) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.banMachine, machineId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banMachineResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all(\n                [\n                    put(Actions.banMachineResult()),\n                    put(Actions.handleError(error.code, error.message))\n                ]\n            );\n        }\n    }\n\n    function* watchUnbanMachine() {\n        while (true) {\n            const machineId = yield take(Types.UNBAN_MACHINE);\n            yield fork(unbanMachine, machineId);\n        }\n    }\n\n    function* unbanMachine(machineId) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.unbanMachine, machineId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanMachineResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.unbanMachineResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchAnsibleHostsFetching() {\n        while (true) {\n            yield take(Types.GET_ANSIBLE_HOSTS);\n            yield fork(getAnsibleHosts);\n        }\n    }\n\n    function* getAnsibleHosts() {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getAnsibleHosts),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getAnsibleHostsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getAnsibleHostsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n\n        }\n    }\n\n    function* watchAnsibleHostsRegisterFetching() {\n        while (true) {\n            const hosts = yield take(Types.GET_ANSIBLE_HOSTS_REGISTER);\n            yield fork(getAnsibleHostsRegister, hosts);\n        }\n    }\n\n    function* getAnsibleHostsRegister(hosts) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getAnsibleHostsRegister, hosts),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getAnsibleHostsRegisterResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getAnsibleHostsRegisterResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetProbesFetching() {\n        while (true) {\n            const {query} = yield take(Types.GET_PROBES_PAGEABLE);\n            yield fork(getProbesPageable, query)\n        }\n    }\n\n    function* getProbesPageable(query) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getProbesPageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getProbesPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        probes: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getProbesPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchGetHostTotalStatistics,\n        watchMachinesForHostFetching,\n        watchAnsibleHostsFetching,\n        watchAnsibleHostsRegisterFetching,\n        watchGetProbesFetching,\n        watchBanMachine,\n        watchUnbanMachine,\n    }\n}\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getK8sResourceStatistics = () => api.get('GetK8sResourceStatistics')\nconst getMachinesForPodPageable = query => api.post('GetMachinesForPodPageable', query);\nconst getMachinesForNodePageable = query => api.post('GetMachinesForNodePageable', query);\nconst queryCollectStatus = () => api.post('QueryCollectStatus');\n\nexport default {\n    queryCollectStatus,\n    getK8sResourceStatistics,\n    getMachinesForPodPageable,\n    getMachinesForNodePageable\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport Actions from \"../actions/Actions\";\nimport KubernetesApi from \"../services/KubernetesApi\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n    function* watchGetK8sResourceStatistics() {\n        while (true) {\n            yield take(Types.GET_K8S_RESOURCE_STATISTICS);\n            yield fork(getK8sResourceStatistics)\n        }\n    }\n\n    function* getK8sResourceStatistics() {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getK8sResourceStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getK8sResourceStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getK8sResourceStatisticsResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchGetMachinesForPod() {\n        while (true) {\n            const {query} = yield take(Types.GET_MACHINES_FOR_POD_PAGEABLE);\n            yield fork(getMachinesForPodPageable, query)\n        }\n    }\n\n    function* getMachinesForPodPageable(query) {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getMachinesForPodPageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForPodPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForPodPageableResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchGetMachinesForNode() {\n        while (true) {\n            const {query} = yield take(Types.GET_MACHINES_FOR_NODE_PAGEABLE);\n            yield fork(getMachinesForNodePageable, query)\n        }\n    }\n\n    function* getMachinesForNodePageable(query) {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getMachinesForNodePageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForNodePageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForNodePageableResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryCollectStatus() {\n        while (true) {\n            yield take(Types.QUERY_COLLECT_STATUS);\n            yield fork(queryCollectStatus)\n        }\n    }\n\n    function* queryCollectStatus() {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.queryCollectStatus),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryCollectStatusResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryCollectStatusResult(false)),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    return {\n        watchQueryCollectStatus,\n        watchGetK8sResourceStatistics,\n        watchGetMachinesForPod,\n        watchGetMachinesForNode,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 获取实验统计\nconst getExperimentStatistics = () => api.post('GetExperimentTotalStatistics');\n\n// 获取实验列表\nconst getExperimentsPageable = query => api.post('GetExperimentsPageable', query);\n\n// 获取实验详情\nconst getExperimentById = experimentId => api.post('GetExperimentById', experimentId);\n\n// 删除实验\nconst deleteExperiment = id => api.post('DeleteExperiment', id);\n\n// 创建实验\nconst createExperiment = experiment => api.post('CreateExperiment', experiment);\n\n// 更新实验\nconst updateExperiment = experiment => api.post('UpdateExperiment', experiment);\n\n// 执行实验\nconst startExperiment = experimentId => api.post('StartExperiment', experimentId);\n\n// 停止实验任务\nconst endExperiment = taskId => api.post('EndExperiment', taskId);\n\nconst getTasksByExperimentId = experimentId => api.post('GetTasksByExperimentId', experimentId)\n\nconst queryTaskResult = taskId => api.post('QueryTaskResult', taskId);\nconst failRetryExperiment = task => api.post('FailRetryExperiment', task);\nconst queryTaskLogging = taskId => api.post('QueryTaskLog', taskId);\nconst queryTaskMonitor = query => api.post('QueryTaskMonitor', query);\nconst queryMetricCategory = query => api.post('QueryMetricCategory', query);\n\nexport default {\n    getExperimentById,\n    createExperiment,\n    updateExperiment,\n    getExperimentStatistics,\n    getExperimentsPageable,\n    startExperiment,\n    endExperiment,\n    getTasksByExperimentId,\n    queryTaskResult,\n    failRetryExperiment,\n    queryTaskLogging,\n    queryTaskMonitor,\n    queryMetricCategory\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ExperimentApi from '../services/ExperimentApi'\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n    function* watchExperimentStatisticFetching() {\n        while (true) {\n            yield take(Types.GET_EXPERIMENT_STATISTICS);\n            yield fork(getExperimentStatistics);\n        }\n    }\n\n    function* getExperimentStatistics() {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield call([\n                put(Actions.getExperimentStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchExperimentsFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_EXPERIMENTS_PAGEABLE);\n            yield fork(getExperimentsPageable, filter)\n        }\n    }\n\n    function* getExperimentsPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentsPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentsPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        experiments: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getExperimentsPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchCreateExperiment() {\n        while (true) {\n            const {experiment: experiment} = yield take(Types.CREATE_EXPERIMENT);\n            yield fork(createExperiment, experiment);\n        }\n    }\n\n    function* createExperiment(experiment) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.createExperiment, experiment),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.createExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.createExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUpdateExperiment() {\n        while (true) {\n            const {experiment: experiment} = yield take(Types.UPDATE_EXPERIMENT);\n            yield fork(updateExperiment, experiment);\n        }\n    }\n\n    function* updateExperiment(experiment) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.updateExperiment, experiment),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.updateExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.updateExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetExperimentById() {\n        while (true) {\n            const experimentId = yield take(Types.GET_EXPERIMENT_BY_ID);\n            yield fork(getExperimentById, experimentId);\n        }\n    }\n\n    function* getExperimentById(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentById, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentByIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getExperimentByIdResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchGetTasksByExperimentId() {\n        while (true) {\n            const experimentId = yield take(Types.GET_TASKS_BY_EXPERIMENT_ID);\n            yield fork(getTasksByExperimentId, experimentId);\n        }\n    }\n\n    function* getTasksByExperimentId(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getTasksByExperimentId, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getTaskByExperimentIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getTaskByExperimentIdResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskResult() {\n        while (true) {\n            const taskId = yield take(Types.QUERY_TASK_RESULT);\n            yield fork(queryTaskResult, taskId);\n        }\n    }\n\n    function* queryTaskResult(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskResult, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskResultResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskResultResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchStartExperiment() {\n        while (true) {\n            const experimentId = yield take(Types.START_EXPERIMENT);\n            yield fork(startExperiment, experimentId);\n        }\n    }\n\n    function* startExperiment(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.startExperiment, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.startExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.startExperimentResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchEndExperiment() {\n        while (true) {\n            const taskId = yield take(Types.END_EXPERIMENT);\n            yield fork(endExperiment, taskId);\n        }\n    }\n\n    function* endExperiment(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.endExperiment, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.endExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.endExperimentResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchRetryExperiment() {\n        while (true) {\n            const task = yield take(Types.FAIL_RETRY_EXPERIMENT);\n            yield fork(retryExperiment, task);\n        }\n    }\n\n    function* retryExperiment(task) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.failRetryExperiment, task),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.retryExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.retryExperimentResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskLogging() {\n        while (true) {\n            const taskId = yield take(Types.QUERY_TASK_LOG);\n            yield fork(queryTaskLogging, taskId);\n        }\n    }\n\n    function* queryTaskLogging(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskLogging, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskLogResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskLogResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskMonitor() {\n        while (true) {\n            const {query: query} = yield take(Types.QUERY_TASK_MONITOR);\n            yield fork(queryTaskMonitor, query);\n        }\n    }\n\n    function* queryTaskMonitor(query) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskMonitor, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskMonitorResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskMonitorResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryMetricCategory() {\n        while (true) {\n            const {query: query} = yield take(Types.QUERY_METRIC_CATEGORY);\n            yield fork(queryMetricCategory, query);\n        }\n    }\n\n    function* queryMetricCategory(query) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryMetricCategory, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryMetricCategoryResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryMetricCategoryResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    return {\n        watchExperimentStatisticFetching,\n        watchExperimentsFetching,\n        watchCreateExperiment,\n        watchUpdateExperiment,\n        watchStartExperiment,\n        watchGetExperimentById,\n        watchGetTasksByExperimentId,\n        watchQueryTaskResult,\n        watchEndExperiment,\n        watchRetryExperiment,\n        watchQueryTaskLogging,\n        watchQueryTaskMonitor,\n        watchQueryMetricCategory\n    }\n}\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst banProbe = probeId => api.post('BanProbe', probeId);\nconst unbanProbe = probeId => api.post('UnbanProbe', probeId);\nconst uninstallProbe = probeId => api.post('UninstallProbe', probeId);\nconst installProbeByAnsible = (values) => api.post('InstallProbesByAnsible', values);\nconst queryProbesInstallation = (probeIds) => api.post('QueryProbesInstallation', probeIds);\n\nexport default {\n    banProbe,\n    unbanProbe,\n    uninstallProbe,\n    installProbeByAnsible,\n    queryProbesInstallation,\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Actions from \"../actions/Actions\";\nimport ProbeApi from \"../services/ProbeApi\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchBanProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.BAN_PROBE);\n            yield fork(banProbe, probeId)\n        }\n    }\n\n    function* banProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.banProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.banProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUnbanProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.UNBAN_PROBE);\n            yield fork(unbanProbe, probeId)\n        }\n    }\n\n    function* unbanProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.unbanProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.unbanProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchInstallProbeByAnsible() {\n        while (true) {\n            const {values} = yield take(Types.INSTALL_PROBE_BY_ANSIBLE);\n            yield fork(installProbeByAnsible, values)\n        }\n    }\n\n    function* installProbeByAnsible(values) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.installProbeByAnsible, values),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.installProbeByAnsibleResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.installProbeByAnsibleResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryProbesInstallation() {\n        while (true) {\n            const {probeIds} = yield take(Types.QUERY_PROBES_INSTALLATION);\n            yield fork(queryProbesInstallation, probeIds)\n        }\n    }\n\n    function* queryProbesInstallation(probeIds) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.queryProbesInstallation, probeIds),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryProbesInstallationResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.queryProbesInstallationResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUninstallProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.UNINSTALL_PROBE);\n            yield fork(uninstallProbe, probeId)\n        }\n    }\n\n    function* uninstallProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.uninstallProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.uninstallProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.uninstallProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchBanProbe,\n        watchUnbanProbe,\n        watchUninstallProbe,\n        watchInstallProbeByAnsible,\n        watchQueryProbesInstallation,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getChaostoolsDeployedStatistics = name => api.post('GetChaostoolsDeployedStatistics', name);\nconst deployChaostoolsToHost = tools => api.post('DeployChaostoolsToHost', tools);\nconst undeployChaostoolsForHost = tools => api.post('UndeployChaostoolsForHost', tools);\nconst upgradeChaostoolsToHost = tools => api.post('UpgradeChaostoolsToHost', tools);\n\nconst fetchScenarios = query => api.post('FetchScenarios', query);\nconst fetchPublicChaostools = () => api.get('FetchPublicChaostools');\nconst fetchChaostoolsOverview = (name) => api.get('FetchChaostoolsOverview/' + name + \"/overview.yaml\");\nconst fetchChaostoolsVersionInfo = (name, version) => api.get('FetchChaostoolsVersionInfo/' + name + '/' + version + '/version.yaml');\nconst fetchChaostoolsScenarios = (name, version, file) => api.get('FetchChaostoolsScenarios/' + name + '/' + version + '/' + file);\n\nexport default {\n    deployChaostoolsToHost,\n    undeployChaostoolsForHost,\n    getChaostoolsDeployedStatistics,\n    upgradeChaostoolsToHost,\n    fetchScenarios,\n    fetchPublicChaostools,\n    fetchChaostoolsOverview,\n    fetchChaostoolsVersionInfo,\n    fetchChaostoolsScenarios\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, putResolve, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ChaostoolsApi from \"../services/ChaostoolsApi\";\nimport ScenarioApi from \"../services/ScenarioApi\";\nimport yaml from \"js-yaml\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchFetchPublicChaostools() {\n        while (true) {\n            const {callback} = yield take(Types.FETCH_PUBLIC_CHAOSTOOLS);\n            yield fork(fetchPublicChaostools, callback);\n        }\n    }\n\n    function* fetchPublicChaostools(callback) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchPublicChaostools),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                callback && callback(data);\n                yield put(Actions.fetchPublicChaostoolsResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchPublicChaostoolsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsOverview() {\n        while (true) {\n            const {name: name} = yield take(Types.FETCH_CHAOSTOOLS_OVERVIEW);\n            yield fork(fetchChaostoolsOverview, name);\n        }\n    }\n\n    function* fetchChaostoolsOverview(name) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsOverview, name),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield put(Actions.fetchChaostoolsOverviewResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchChaostoolsOverviewResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsVersionInfo() {\n        while (true) {\n            const {name: name, version: version} = yield take(Types.FETCH_CHAOSTOOLS_VERSION_INFO);\n            yield fork(fetchChaostoolsVersionInfo, name, version);\n        }\n    }\n\n    function* fetchChaostoolsVersionInfo(name, version) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsVersionInfo, name, version),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield put(Actions.fetchChaostoolsVersionInfoResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchChaostoolsVersionInfoResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsScenarios() {\n        while (true) {\n            const {name: name, version: version, file: file} = yield take(Types.FETCH_CHAOSTOOLS_SCENARIOS);\n            yield fork(fetchChaostoolsScenarios, name, version, file);\n        }\n    }\n\n    function* fetchChaostoolsScenarios(name, version, file) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsScenarios, name, version, file),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield putResolve(Actions.fetchChaostoolsScenariosResult({...data, file}));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchPublicChaostoolsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchImportScenarios() {\n        while (true) {\n            const {scenarios, file} = yield take(Types.IMPORT_SCENARIOS);\n            yield fork(importScenarios, scenarios, file)\n        }\n    }\n\n    function* importScenarios(scenarios, file) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.importScenarios, scenarios),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.importScenariosResult({...data.data, file}));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.importScenariosResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchDeployChaostoolsToHost() {\n        while (true) {\n            const {tools} = yield take(Types.DEPLOY_CHAOSTOOLS_TO_HOST);\n            yield fork(deployChaostoolsToHost, tools);\n        }\n    }\n\n    function* deployChaostoolsToHost(tools) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.deployChaostoolsToHost, tools),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.deployChaostoolsToHostResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.deployChaostoolsToHostResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchFetchChaostoolsOverview,\n        watchFetchChaostoolsVersionInfo,\n        watchFetchChaostoolsScenarios,\n        watchFetchPublicChaostools,\n        watchImportScenarios,\n        watchDeployChaostoolsToHost,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport application from './Application'\nimport scenario from './Scenario'\nimport host from './Host'\nimport kubernetes from './Kubernetes'\nimport experiment from './Experiment'\nimport probe from './Probe'\nimport chaostools from './Chaostools'\nimport {fork} from \"redux-saga/effects\";\n\nexport default function* root() {\n    yield fork(application().watchApplicationTotalStatisticFetching);\n    yield fork(application().watchMachinesForApplicationFetching);\n    yield fork(host().watchGetHostTotalStatistics);\n    yield fork(host().watchMachinesForHostFetching);\n    yield fork(host().watchAnsibleHostsFetching);\n    yield fork(host().watchAnsibleHostsRegisterFetching);\n    yield fork(host().watchGetProbesFetching);\n    yield fork(host().watchBanMachine);\n    yield fork(host().watchUnbanMachine);\n    yield fork(scenario().watchScenarioStatisticsFetching);\n    yield fork(scenario().watchScenariosFetching);\n    yield fork(scenario().watchScenarioCategoriesFetching);\n    yield fork(scenario().watchGetScenarioById);\n    yield fork(scenario().watchBanScenario);\n    yield fork(scenario().watchUnbanScenario);\n    yield fork(scenario().watchUpdateScenario);\n    yield fork(kubernetes().watchGetK8sResourceStatistics);\n    yield fork(kubernetes().watchGetMachinesForPod);\n    yield fork(kubernetes().watchGetMachinesForNode);\n    yield fork(kubernetes().watchQueryCollectStatus);\n    yield fork(experiment().watchExperimentStatisticFetching);\n    yield fork(experiment().watchExperimentsFetching);\n    yield fork(experiment().watchCreateExperiment);\n    yield fork(experiment().watchUpdateExperiment);\n    yield fork(experiment().watchStartExperiment);\n    yield fork(experiment().watchGetExperimentById);\n    yield fork(experiment().watchGetTasksByExperimentId);\n    yield fork(experiment().watchQueryTaskResult);\n    yield fork(experiment().watchEndExperiment);\n    yield fork(experiment().watchRetryExperiment);\n    yield fork(experiment().watchQueryTaskLogging);\n    yield fork(experiment().watchQueryTaskMonitor);\n    yield fork(experiment().watchQueryMetricCategory);\n    yield fork(probe().watchBanProbe);\n    yield fork(probe().watchUnbanProbe);\n    yield fork(probe().watchUninstallProbe);\n    yield fork(probe().watchInstallProbeByAnsible);\n    yield fork(probe().watchQueryProbesInstallation);\n    yield fork(chaostools().watchFetchPublicChaostools);\n    yield fork(chaostools().watchImportScenarios);\n    yield fork(chaostools().watchDeployChaostoolsToHost);\n    yield fork(chaostools().watchFetchChaostoolsOverview);\n    yield fork(chaostools().watchFetchChaostoolsVersionInfo);\n    yield fork(chaostools().watchFetchChaostoolsScenarios);\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nimport { getPersistConfig } from './getPersistConfig';\n\nimport reducers from '../reducers';\nimport sagas from '../sagas';\n\nexport default () => {\n\tconst persistConfig = getPersistConfig();\n\n\tconst sagaMiddleware = createSagaMiddleware();\n\n\tlet enhancer   = applyMiddleware(sagaMiddleware);\n\t// if (process.env.NODE_ENV === 'development') {\n\tconst devtools = require('redux-devtools-extension');\n\tenhancer       = devtools.composeWithDevTools({ trace: true })(enhancer);\n\t// }\n\n\tconst store = createStore(persistReducer(persistConfig, reducers), enhancer);\n\n\tsagaMiddleware.run(sagas);\n\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport localForage from 'localforage';\n\nconst getPersistConfig = () => {\n\tconst key = `chaos`;\n\n\treturn {\n\t\ttransforms: [ immutableTransform() ],\n\t\tkey,\n\t\t// TODO 需要修改\n\t\twhitelist : [ 'experimentDraft', 'scriptTypedSceneDraft', 'error' ],\n\t\tstorage   : localForage\n\t};\n\n};\n\nexport { getPersistConfig };\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {zh} from './zh'\nimport {en} from './en'\n\nexport const Messages = {\n    en: en,\n    zh: zh\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const en = {\n    'menu.overview': \"Overview\",\n    'menu.machine': 'Machine',\n    'menu.machine.list': 'MachineList',\n    'menu.machine.register': 'MachineRegister',\n    'menu.machine.probe': 'ProbeManager',\n    'menu.scenario': 'Scenario',\n    'menu.scenario.list': 'ScenarioList',\n    'menu.scenario.category': 'ScenarioCategory',\n    'menu.experiment': 'Experiment',\n    'menu.experiment.list': 'ExperimentList',\n    'menu.experiment.task': 'ExperimentTask',\n    'menu.experiment.creating': \"ExperimentCreating\",\n    'menu.experiment.detail': 'ExperimentDetail',\n    'menu.chaostools': 'ChaosTools',\n    'menu.chaostools.deployed': 'ChaosToolsDeployed',\n    'menu.chaostools.market': 'ChaosToolsMarket',\n    'menu.chaostools.detail': 'ChaosToolsDetail',\n\n    'page.pagination.total': 'Total: {total}',\n    'page.popconfirm.ok': 'Yes',\n    'page.popconfirm.cancel': 'No',\n\n    'page.machine.tab.host': 'Host',\n    'page.machine.tab.application': 'Application',\n    'page.machine.tab.kubernetes': 'Kubernetes',\n    'page.machine.register.tab.host': 'HostRegister',\n    'page.machine.register.tab.kubernetes': 'KubernetesRegister',\n    'page.machine.register.tab.application': 'ApplicationRegister',\n    'page.machine.register.tab.probe': 'ProbeList',\n    'page.machine.register.ansible': 'Ansible',\n    'page.machine.register.ssh': 'SSH',\n    'page.machine.register.manual': 'Manual',\n    'page.machine.register.helm': 'Helm',\n\n    'page.machine.status.wait': 'WaitForInstallation',\n    'page.machine.status.installing': 'Installing',\n    'page.machine.status.install.failed': 'InstallFailed',\n    'page.machine.status.online': 'Online',\n    'page.machine.status.offline': 'Offline',\n    'page.machine.status.uninstalling': 'Uninstalling',\n    'page.machine.status.uninstall.failed': 'UninstallFailed',\n    'page.machine.status.baning': 'Baning',\n\n    'page.machine.host.column.title.status': 'Status',\n    'page.machine.host.column.title.index': 'Index',\n    'page.machine.host.column.title.machineId': 'MachineId',\n    'page.machine.host.column.title.hostname': 'MachineName',\n    'page.machine.host.column.title.version': 'OsVersion',\n    'page.machine.host.column.title.heartbeatTime': 'HeartbeatTime',\n    'page.machine.host.column.title.chaosed': 'Chaosed',\n    'page.machine.host.column.title.chaosTime': 'ChaosTime',\n    'page.machine.host.column.title.operation': 'Operation',\n    'page.machine.host.column.title.chaosRunning': 'ChaosRunning',\n    'page.machine.host.column.operation.ban.name': 'Disable',\n    'page.machine.host.column.operation.unban.name': 'Enable',\n    'page.machine.host.column.operation.ban.pop.title': 'Are you sure you want to disable it?',\n    'page.machine.host.column.operation.unban.pop.title': 'Are you sure you want to enable it?',\n    'page.machine.host.column.operation.experiment.creating': 'CreateExperiment',\n    'page.machine.host.column.operation.experiment.running': 'ExperimentRunning...',\n\n    'page.experiment.creating.host.dimension.name': 'HostDimension',\n    'page.experiment.creating.application.dimension.name': 'ApplicationDimension',\n    'page.experiment.creating.kubernetes.dimension.name': 'KubernetesDimension',\n\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const zh = {\n    'menu.overview': \"概览\",\n    'menu.machine': '机器管理',\n    'menu.machine.list': '机器列表',\n    'menu.machine.register': '机器注册',\n    'menu.machine.probe': '探针管理',\n    'menu.scenario': '场景管理',\n    'menu.scenario.list': '场景列表',\n    'menu.scenario.category': '场景目录',\n    'menu.experiment': '实验管理',\n    'menu.experiment.list': '实验列表',\n    'menu.experiment.task': '实验任务',\n    'menu.experiment.creating': \"创建实验\",\n    'menu.experiment.detail': '实验详情',\n    'menu.chaostools': '实验工具',\n    'menu.chaostools.deployed': '部署列表',\n    'menu.chaostools.market': '工具市场',\n    'menu.chaostools.detail': '工具详情',\n\n    'page.pagination.total': '共{total}条',\n    'page.popconfirm.ok': '确定',\n    'page.popconfirm.cancel': '取消',\n\n    'page.machine.tab.host': '主机维度',\n    'page.machine.tab.application': '应用维度',\n    'page.machine.tab.kubernetes': 'Kubernetes 维度',\n    'page.machine.register.tab.host': '主机注册',\n    'page.machine.register.tab.kubernetes': 'Kubernetes注册',\n    'page.machine.register.tab.application': '应用接入说明',\n    'page.machine.register.tab.probe': '探针管理',\n    'page.machine.register.ansible': '通过Ansible安装',\n    'page.machine.register.ssh': '通过SSH安装',\n    'page.machine.register.manual': '手动安装',\n    'page.machine.register.helm': '通过Helm安装',\n\n    'page.machine.status.wait': '未安装',\n    'page.machine.status.installing': '安装中',\n    'page.machine.status.install.failed': '安装失败',\n    'page.machine.status.online': '在线',\n    'page.machine.status.offline': '离线',\n    'page.machine.status.uninstalling': '卸载中',\n    'page.machine.status.uninstall.failed': '卸载失败',\n    'page.machine.status.baning': '禁用',\n\n    'page.machine.host.column.title.status': '机器状态',\n    'page.machine.host.column.title.index': '序号',\n    'page.machine.host.column.title.machineId': '机器ID',\n    'page.machine.host.column.title.hostname': '机器名',\n    'page.machine.host.column.title.version': '系统版本',\n    'page.machine.host.column.title.heartbeatTime': '心跳时间',\n    'page.machine.host.column.title.chaosed': '是否演练过',\n    'page.machine.host.column.title.chaosTime': '演练时间',\n    'page.machine.host.column.title.operation': '操作',\n    'page.machine.host.column.title.chaosRunning': '是否演练中',\n\n    'page.machine.host.column.operation.ban.name': '禁用',\n    'page.machine.host.column.operation.unban.name': '解禁',\n    'page.machine.host.column.operation.ban.pop.title': '确定要禁用吗？',\n    'page.machine.host.column.operation.unban.pop.title': '确定要解禁吗？',\n    'page.machine.host.column.operation.experiment.creating': '创建实验',\n    'page.machine.host.column.operation.experiment.running': '演练中...',\n\n    'page.experiment.creating.host.dimension.name': '主机维度',\n    'page.experiment.creating.application.dimension.name': '应用维度',\n    'page.experiment.creating.kubernetes.dimension.name': 'Kubernetes 维度',\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nconst HistoryContext = React.createContext(null);\n\nexport default HistoryContext;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport Actions from \"../../actions/Actions\";\nimport {message} from \"antd\";\n\nclass Error extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        const {errorCode, errorMessage, clearError} = nextProps;\n        if (errorCode > -1 && !_.isEmpty(errorMessage)) {\n            clearError && clearError();\n            message.error(errorMessage);\n        }\n        return null;\n    }\n\n    componentDidCatch(error, errorInfo) {\n        const {handlerCriticalError} = this.props;\n        handlerCriticalError && handlerCriticalError(error.stack);\n\n        if (this.isDebug()) {\n            window.location.href = '/500';\n        } else {\n            return message.error('发生未知错误！', 2, onclose);\n        }\n    }\n\n    isDebug() {\n        const parsed = queryString.parse(window.location.search);\n        return !_.isEmpty(parsed)\n            && !_.isUndefined(parsed.debug)\n            && !_.isNull(parsed.debug)\n            && (parsed.debug === '1' || parsed.debug === 1);\n    }\n\n    render() {\n        const {children} = this.props;\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n\n}\n\nconst mapPropsToState = state => {\n    const error = state.error.toJS();\n    return {\n        requestId: error.requestId,\n        errorCode: error.code,\n        errorMessage: error.message\n    };\n};\n\nconst mapDispatchToState = dispatch => {\n    return {\n        clearError: () => dispatch(Actions.clearError()),\n        handlerCriticalError: error => dispatch(Actions.handleCriticalError(error))\n    };\n};\n\nexport default connect(mapPropsToState, mapDispatchToState)(Error);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Layout, Menu, Radio} from \"antd\";\nimport {NavigationConfig} from \"../Component/Metadata/navigation\";\nimport {Link} from \"react-router-dom\";\nimport {FormattedMessage} from \"react-intl\";\nimport styles from './index.module.scss'\n\nconst {SubMenu} = Menu\nconst {Sider} = Layout;\n\n\nclass ConsoleSider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n        };\n    }\n\n    onCollapse = collapsed => {\n        this.setState({collapsed});\n    };\n\n    render() {\n        const {locale, changeLocale, location} = this.props;\n        const {collapsed} = this.state;\n        return (\n            <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n                <div className={styles.changeLocale}>\n                    <Radio.Group onChange={changeLocale} defaultValue={locale} size={collapsed ? 'small' : 'normal'}>\n                        <Radio.Button key=\"en\" value={\"en\"}>\n                            English\n                        </Radio.Button>\n                        <Radio.Button key=\"cn\" value={\"zh\"}>\n                            中文\n                        </Radio.Button>\n                    </Radio.Group>\n                </div>\n                <h1 className={styles.logo}>{collapsed ? 'CHAOS' : 'CHAOS-PLATFORM'}</h1>\n                <h4 className={styles.logo}>{collapsed ? 'v0.0.1' : 'v0.0.1'}</h4>\n                <Menu theme=\"dark\"\n                      defaultSelectedKeys={['/machine']}\n                      selectedKeys={[location.pathname]}\n                      mode=\"inline\"\n                      defaultOpenKeys={['/overview', '/machine', '/chaostools', '/scenario', '/experiment']}>\n                    {NavigationConfig.map(nav => (\n                        nav.subs.length === 0 ?\n                            <Menu.Item key={nav.key} icon={nav.icon} title={nav.name}>\n                                <Link to={nav.path}/>\n                                <FormattedMessage id={nav.id}/>\n                            </Menu.Item>\n                            :\n                            <SubMenu key={nav.key} icon={nav.icon} title={\n                                <>\n                                    <FormattedMessage id={nav.id}/>\n                                </>\n                            }>\n                                {nav.subs.map(\n                                    nav => (\n                                        <Menu.Item key={nav.key} icon={nav.icon}\n                                                   title={nav.name}>\n                                            <Link to={nav.path}/>\n                                            <FormattedMessage id={nav.id}/>\n                                        </Menu.Item>\n                                    )\n                                )}\n                            </SubMenu>\n                    ))}\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default ConsoleSider;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'antd/dist/antd.less';\n// import 'antd/dist/antd.dark.less'; // 引入官方提供的暗色 less 样式入口文件\n// import 'antd/dist/antd.compact.less'; // 引入官方提供的紧凑 less 样式入口文件\nimport PathRouter from \"./PathRouter\";\n\nimport {Layout, Menu} from 'antd';\nimport React from \"react\";\nimport './index.css'\nimport {withRouter} from \"react-router-dom\";\nimport HeaderBar from \"./pages/Component/HeaderBar\";\nimport configureStore from \"./stores/configureStore\";\nimport {createBrowserHistory} from 'history';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {Provider} from 'react-redux';\n\nimport {IntlProvider} from 'react-intl';\nimport {Messages} from \"./locales\";\nimport HistoryContext from \"./libs/Request/HistoryContext\";\nimport Error from \"./pages/Error\";\nimport ConsoleSider from \"./pages/Sider\";\n\nconst {SubMenu} = Menu\nconst {Header, Content, Footer, Sider} = Layout;\n\n\nclass Console extends React.Component {\n    constructor(props) {\n        super(props);\n        const {store, persistor} = this.createStore();\n        this.store = store;\n        this.persistor = persistor;\n        this.history = createBrowserHistory();\n        this.state = {\n            locale: \"zh\",\n        };\n    }\n\n    changeLocale = e => {\n        this.setState({locale: e.target.value});\n    };\n\n    createStore() {\n        return {...configureStore()};\n    }\n\n    render() {\n        const {locale} = this.state;\n        const {store, persistor} = this;\n        const {location} = this.props;\n        return (\n            <Provider store={store}>\n                <PersistGate persistor={persistor}>\n                    <Error>\n                        <HistoryContext.Provider value={this.history}>\n                            <Layout style={{minHeight: '100vh'}}>\n                                <IntlProvider locale={locale} messages={Messages[locale]}>\n                                    <ConsoleSider\n                                        location={location}\n                                        locale={locale}\n                                        changeLocale={this.changeLocale.bind(this)}\n                                    />\n                                    <Layout className=\"site-layout\">\n                                        <Content style={{margin: '0 16px'}}>\n                                            <HeaderBar/>\n                                            <div className=\"site-layout-background\"\n                                                 style={{padding: 24, minHeight: 360}}>\n                                                <PathRouter/>\n                                            </div>\n                                        </Content>\n                                        <Footer style={{textAlign: 'center'}}>\n                                            Created by CHAOSBLADE-IO</Footer>\n                                    </Layout>\n                                </IntlProvider>\n                            </Layout>\n                        </HistoryContext.Provider>\n                    </Error>\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n\nexport default withRouter(Console);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Console from \"./Console\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Console/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCard\":\"Task_taskCard__2DMRI\",\"taskMonitor\":\"Task_taskMonitor__3NRcm\",\"hostContainer\":\"Task_hostContainer__2Pre-\",\"host\":\"Task_host__1FWH6\",\"ip\":\"Task_ip__Q6omo\",\"status\":\"Task_status__20HiC\",\"success\":\"Task_success__16BcU\",\"failed\":\"Task_failed__3Pimf\",\"ignored\":\"Task_ignored__3ZqO1\",\"detail\":\"Task_detail__1j0LV\",\"executeStatus\":\"Task_executeStatus__1PbCw\"};"],"sourceRoot":""}